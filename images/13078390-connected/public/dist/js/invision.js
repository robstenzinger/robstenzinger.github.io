//!file:main.js
var InVision=angular.module("InVision",["ngRoute","ngSanitize"]);!function(ng,app){app.config(function($locationProvider,$routeProvider){$locationProvider.hashPrefix(""),$routeProvider.when("/overview",{action:"overview"}).when("/people",{action:"people"}).when("/screens",{redirectTo:"/screens/list"}).when("/screens/list",{action:"screens.list"}).when("/screens/browse",{action:"screens.browse"}).when("/screens/:screenID",{action:"screens.detail"}).when("/comments",{redirectTo:"/comments/list"}).when("/comments/list",{action:"comments.list"}).when("/comments/:screenID/:conversationID?",{action:"comments.detail"}).when("/redirect",{action:"redirect"}).when("/thank-you",{action:"thanks"}).otherwise({redirectTo:function(routeParams,path,search){return"/overview"}})}).run(function($log,$rootScope,$route,$routeParams,requestContext){$rootScope.$on("$routeChangeSuccess",function(event,currentRoute,previousRoute){return $route.current.action?(requestContext.setContext($route.current.action,$routeParams),void $rootScope.$broadcast("requestContextChanged",requestContext)):void $log.warn("Route does not have an action.")})}),app.run(function($log,appConfig){$log.info("Application Loaded"),$log.info(appConfig);var node=jQuery("#pre-boostrap-loading").addClass("fade-out");setTimeout(function(){node.remove()},1e3)})}(angular,InVision);;
//!file:key-commands-helper.js
!function(ng,app){"use strict";function buildOsModifier(){var macOsPattern=/Mac|iPod|iPhone|iPad/;return macOsPattern.test(window.navigator.platform)?{"long":"Command","short":"Cmd",key:"meta"}:{"long":"Control","short":"Ctrl",key:"control"}}function keyCommandsHelperFactory(){function getKeyFromEvent(event){var key=event.key||event.keyIdentifier||"Unidentified";0===key.indexOf("U+")&&(key=String.fromCharCode(parseInt(key.slice(2),16)));var mappedKey=(KEY_MAP[key]||key).toLowerCase(),parts=[mappedKey];return event.altKey&&"alt"!==mappedKey&&parts.push("Alt"),event.ctrlKey&&"control"!==mappedKey&&parts.push("Control"),event.metaKey&&"meta"!==mappedKey&&parts.push("Meta"),event.shiftKey&&"shift"!==mappedKey&&parts.push("Shift"),normalizeKey(parts.join("."))}function getOsModifier(){return OS_MODIFIER}function isEvent(event,key){return getKeyFromEvent(event)===normalizeKey(key)}function isEventFromInput(event){if(event.target&&event.target.nodeName)switch(event.target.nodeName){case"INPUT":case"SELECT":case"TEXTAREA":return!0;default:return!1}return!1}function normalizeKey(key){return normalizedKeys[key]||(normalizedKeys[key]=key.toLowerCase().split(".").map(function(segment){return KEY_ALIAS[segment]||segment}).sort().join(".")),normalizedKeys[key]}var normalizedKeys=Object.create(null);return{getKeyFromEvent:getKeyFromEvent,getOsModifier:getOsModifier,isEvent:isEvent,isEventFromInput:isEventFromInput,normalizeKey:normalizeKey}}var OS_MODIFIER=buildOsModifier(),KEY_ALIAS={command:"meta",ctrl:"control",del:"delete",down:"arrowdown",esc:"escape",left:"arrowleft",mod:OS_MODIFIER.key,modify:OS_MODIFIER.key,right:"arrowright",up:"arrowup"},KEY_MAP={"\b":"Backspace","	":"Tab","":"Delete","":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"," ":"Space",Spacebar:"Space",".":"Dot"};app.factory("keyCommandsHelper",keyCommandsHelperFactory)}(angular,InVision);;
//!file:key-commands-service.js
!function(ng,app){"use strict";function KeyCommandsFactory($document,$rootScope,keyCommandsHelper){function listen(bindings,options){options=options||{};var listener={bindings:normalizeBindings(bindings),priority:options.priority||0,isTerminal:normalizeIsTerminal(options.isTerminal),terminalWhitelist:normalizeTerminalWhitelist(options.terminalWhitelist),allowInputCapture:normalizeAllowInputCapture(options.allowInputCapture),allowInputCaptureTest:normalizeAllowInputCaptureTest(options.allowInputCaptureTest)};return addListener(listener),function(){removeListener(listener)}}function addListener(listenerToAdd){listeners.push(listenerToAdd),listeners.sort(function(a,b){return a.priority===b.priority?0:a.priority>b.priority?-1:1})}function handleKeyboardEvent(event){for(var listenersCopy=listeners.slice(),key=helper.getKeyFromEvent(event),isInputEvent=helper.isEventFromInput(event),listenerCount=listeners.length,handler=null,i=0;listenerCount>i;i++){var listener=listenersCopy[i];if(handler=listener.bindings[key]){if(!isInputEvent||listener.allowInputCapture||listener.allowInputCaptureTest&&listener.allowInputCaptureTest(event,key)){var result=$rootScope.$apply(function(){return handler(event)});if(result===!1)return;if(result===!0)continue}if("match"===listener.isTerminal)return}if(listener.isTerminal===!0&&!listener.terminalWhitelist[key])return}}function normalizeAllowInputCapture(allowInputCapture){return void 0===allowInputCapture?!1:allowInputCapture}function normalizeAllowInputCaptureTest(allowInputCaptureTest){return void 0===allowInputCaptureTest?null:allowInputCaptureTest}function normalizeBindings(bindings){var normalized=Object.create(null);for(var key in bindings)normalized[helper.normalizeKey(key)]=bindings[key];return normalized}function normalizeIsTerminal(isTerminal){return void 0===isTerminal?!0:isTerminal}function normalizeTerminalWhitelist(keys){var normalized=Object.create(null);return keys&&keys.forEach(function(key){normalized[helper.normalizeKey(key)]=!0}),normalized}function removeListener(listenerToRemove){listeners=listeners.filter(function(listener){return listener!==listenerToRemove})}var helper=keyCommandsHelper,listeners=[];return $document.on("keydown",handleKeyboardEvent),{listen:listen,getOsModifier:helper.getOsModifier}}app.factory("keyCommandsService",KeyCommandsFactory)}(angular,InVision);;
//!file:key-commands.directive.js
!function(ng,app){"use strict";function KeyCommandsDirective(_,keyCommandsHelper){function link(scope,element,attributes){function handleKeydownEvent(event){for(var command in keyCommandsConfig)if(keyCommandsHelper.isEvent(event,command))return event.preventDefault(),void scope.$apply(function(){scope.$eval(keyCommandsConfig[command],{$event:event,command:command})})}function init(){scope.$on("$destroy",function(){element.off("keydown",handleKeydownEvent)}),element.on("keydown",handleKeydownEvent)}var keyCommandsConfig=_.assign(Object.create(null),scope.$eval(attributes.invKeyCommands));init()}return{link:link,restrict:"A"}}app.directive("invKeyCommands",KeyCommandsDirective),[{directive:"invKeyCommandEnter",command:"Enter"},{directive:"invKeyCommandModEnter",command:"Mod.Enter"},{directive:"invKeyCommandEscape",command:"Escape"}].forEach(function(settings){function SingleKeyCommandDirective(_,keyCommandsHelper){function link(scope,element,attributes){function handleKeydownEvent(event){keyCommandsHelper.isEvent(event,settings.command)&&(event.preventDefault(),scope.$apply(function(){scope.$eval(attributes[settings.directive],{$event:event,command:settings.command})}))}function init(){scope.$on("$destroy",function(){element.off("keydown",handleKeydownEvent)}),element.on("keydown",handleKeydownEvent)}init()}return{link:link,restrict:"A"}}app.directive(settings.directive,SingleKeyCommandDirective)})}(angular,InVision);;
//!file:date-helper.js
!function(ng,app){"use strict";function Service(){return this.dayAsStringMap=[{"long":"Sunday","short":"Sun"},{"long":"Monday","short":"Mon"},{"long":"Tuesday","short":"Tue"},{"long":"Wednesday","short":"Wed"},{"long":"Thursday","short":"Thr"},{"long":"Friday","short":"Fri"},{"long":"Saturday","short":"Sat"}],this.monthAsStringMap=[{"long":"January","short":"Jan"},{"long":"February","short":"Feb"},{"long":"March","short":"Mar"},{"long":"April","short":"Apr"},{"long":"May","short":"May"},{"long":"June","short":"Jun"},{"long":"July","short":"Jul"},{"long":"August","short":"Aug"},{"long":"September","short":"Sep"},{"long":"October","short":"Oct"},{"long":"November","short":"Nov"},{"long":"December","short":"Dec"}],this}app.service("dateHelper",Service);var MS_SECOND=1e3,MS_MINUTE=60*MS_SECOND,MS_HOUR=60*MS_MINUTE,MS_DAY=24*MS_HOUR,MS_MONTH=30*MS_DAY,MS_YEAR=365*MS_DAY,FROM_NOW_JUST_NOW=44*MS_SECOND,FROM_NOW_MINUTE=89*MS_SECOND,FROM_NOW_MINUTES=44*MS_MINUTE,FROM_NOW_HOUR=89*MS_MINUTE,FROM_NOW_HOURS=21*MS_HOUR,FROM_NOW_DAY=35*MS_HOUR,FROM_NOW_DAYS=25*MS_DAY,FROM_NOW_MONTH=45*MS_DAY,FROM_NOW_MONTHS=319*MS_DAY,FROM_NOW_YEAR=547*MS_DAY;Service.prototype={add:function(datetime,count,unit){var newDatetime=this.duplicate(datetime);switch(unit.toLowerCase()){case"y":newDatetime.setFullYear(newDatetime.getFullYear()+count);break;case"m":newDatetime.setMonth(newDatetime.getMonth()+count);break;case"d":newDatetime.setDate(newDatetime.getDate()+count);break;case"w":newDatetime.setDate(newDatetime.getDate()+7*count);break;case"h":newDatetime.setTime(newDatetime.getTime()+1e3*count*60*60);break;case"n":newDatetime.setTime(newDatetime.getTime()+1e3*count*60);break;case"s":newDatetime.setTime(newDatetime.getTime()+1e3*count);break;case"l":newDatetime.setTime(newDatetime.getTime()+count)}return newDatetime},addDays:function(datetime,dayCount){var newDatetime=this.duplicate(datetime);return newDatetime.setDate(newDatetime.getDate()+dayCount),newDatetime},addLeadingZero:function(value){return 1===value.toString().length?"0"+value:value},convertSecondsToMinutes:function(seconds,excludeZeroMinute){var minutes=Math.floor(seconds/60),remainingSeconds=seconds%60;return excludeZeroMinute===!0&&0===minutes?":"+this.addLeadingZero(remainingSeconds):minutes+":"+this.addLeadingZero(remainingSeconds)},duplicate:function(datetime){return new Date(datetime)},equals:function(date1,date2){return date1.getTime()===date2.getTime()},fromNow:function(date){var nowTick=Date.now(),dateTick=this.getTickCount(date);if(nowTick>=dateTick)var delta=nowTick-dateTick,prefix="",suffix=" ago";else var delta=dateTick-nowTick,prefix="in ",suffix="";return FROM_NOW_JUST_NOW>=delta?prefix+"a few seconds"+suffix:FROM_NOW_MINUTE>=delta?prefix+"a minute"+suffix:FROM_NOW_MINUTES>=delta?prefix+Math.ceil(delta/MS_MINUTE)+" minutes"+suffix:FROM_NOW_HOUR>=delta?prefix+"an hour"+suffix:FROM_NOW_HOURS>=delta?prefix+Math.ceil(delta/MS_HOUR)+" hours"+suffix:FROM_NOW_DAY>=delta?prefix+"a day"+suffix:FROM_NOW_DAYS>=delta?prefix+Math.ceil(delta/MS_DAY)+" days"+suffix:FROM_NOW_MONTH>=delta?prefix+"a month"+suffix:FROM_NOW_MONTHS>=delta?prefix+Math.ceil(delta/MS_MONTH)+" months"+suffix:FROM_NOW_YEAR>=delta?prefix+"a year"+suffix:prefix+Math.ceil(delta/MS_YEAR)+" years"+suffix},formatDate:function(datetime,dateMask){var self=this,date=this.removeTime(datetime),result=dateMask.replace(/M+|m+|d+|yyyy|yy/g,function($0){return self.getFormattedDatePart(date,$0)});return result},formatRecentDate:function(datetime,dateMask){var date=this.removeTime(datetime);return this.isToday(date)?"Today":this.isYesterday(date)?"Yesterday":this.formatDate(datetime,dateMask)},formatRecentDateWithTodayAsTime:function(datetime,dateMask,timeMask){var date=this.removeTime(datetime);return this.isToday(date)?this.formatTime(datetime,timeMask||"h:mm TT"):this.isYesterday(date)?"Yesterday":this.formatDate(datetime,dateMask||"mmm d, yyyy")},formatTime:function(datetime,timeMask){var self=this,date=this.duplicate(datetime),result=timeMask.replace(/H+|h+|m+|t+|T+/g,function($0){return self.getFormattedTimePart(date,$0)});return result},getDayOfWeekAsString:function(dayOfWeek,useShortVersion){return useShortVersion?this.dayAsStringMap[dayOfWeek]["short"]:this.dayAsStringMap[dayOfWeek]["long"]},getFormattedDatePart:function(datetime,pattern){switch(pattern){case"D":case"d":return datetime.getDate();case"DD":case"dd":return this.addLeadingZero(datetime.getDate());case"DDD":return this.getDayOfWeekAsString(datetime.getDay(),!0).toUpperCase();case"ddd":return this.getDayOfWeekAsString(datetime.getDay(),!0);case"dddd":return this.getDayOfWeekAsString(datetime.getDay(),!1);case"M":case"m":return datetime.getMonth()+1;case"MM":case"mm":return this.addLeadingZero(datetime.getMonth()+1);case"MMM":case"mmm":return this.getMonthAsString(datetime.getMonth(),!0);case"MMMM":case"mmmm":return this.getMonthAsString(datetime.getMonth(),!1);case"YY":case"yy":return this.addLeadingZero(datetime.getFullYear()%100);case"YYYY":case"yyyy":return datetime.getFullYear()}return pattern},getFormattedTimePart:function(datetime,pattern){switch(pattern){case"H":return datetime.getHours();case"HH":var value=datetime.getHours();return 10>value?"0"+value:value;case"h":var value=datetime.getHours()%12;return 0===value?12:value;case"hh":var value=datetime.getHours()%12;return value=0===value?12:value,10>value?"0"+value:value;case"M":case"MM":case"m":case"mm":var value=datetime.getMinutes();return 10>value?"0"+value:value;case"T":return datetime.getHours()<12?"A":"P";case"TT":return datetime.getHours()<12?"AM":"PM";case"t":return datetime.getHours()<12?"a":"p";case"tt":return datetime.getHours()<12?"am":"pm"}return pattern},getMonthAsString:function(month,useShortVersion){return useShortVersion?this.monthAsStringMap[month]["short"]:this.monthAsStringMap[month]["long"]},getTickCount:function(value){return value instanceof Date?value.getTime():value},isRecent:function(datetime,delta,unit){var cutoff=this.add(new Date,-delta,unit);return datetime>=cutoff},isToday:function(datetime){return this.equals(datetime,this.today())},isYesterday:function(datetime){return this.equals(datetime,this.yesterday())},notEquals:function(date1,date2){return!this.equals(date1,date2)},removeTime:function(datetime){var newDatetime=this.duplicate(datetime);return newDatetime.setHours(0),newDatetime.setMinutes(0),newDatetime.setSeconds(0),newDatetime.setMilliseconds(0),newDatetime},today:function(){return this.removeTime(new Date)},tomorrow:function(){return this.addDays(this.today(),1)},yesterday:function(){return this.addDays(this.today(),-1)},formatLastViewedAbbreviated:function(lastViewedAt){if(!lastViewedAt)return"";var string=this.fromNow(lastViewedAt);return"a few seconds ago"===string?string="just now":"a minute ago"===string?string="1m ago":"an hour ago"===string?string="1h ago":string.indexOf(" seconds")>=0?string=string.replace(" seconds","s"):string.indexOf(" minutes")>=0?string=string.replace(" minutes","m"):string.indexOf(" hours")>=0?string=string.replace(" hours","h"):string.indexOf(" days")>=0?string=string.replace(" days","d"):string.indexOf(" months")>=0?string=string.replace(" months","mo"):string.indexOf(" years")>=0&&(string=string.replace(" years","y")),"Viewed "+string}}}(angular,InVision);;
//!file:lodash.js
!function(ng,app,_,undefined){"use strict";function Factory(){return _.anyWithProperty=function(collection,name,value){var result=_.any(collection,function(item){return item[name]===value});return result},_.capitalizeFirstLetter=function(value){return value?value.slice(0,1).toUpperCase()+value.slice(1):""},_.clamp=function(value,minValue,maxValue){return Math.min(Math.max(value,minValue),maxValue)},_.coalesce=function(value,defaultValue){return null===value||value===undefined?defaultValue:value},_.containsWithProperty=function(collection,name,value){return!!this.findWithProperty(collection,name,value)},_.countWithProperty=function(collection,name,value){for(var count=0,i=0;i<collection.length;i++)collection[i][name]===value&&count++;return count},_.extendExistingProperties=function(destination,source){if(!destination||!source)return destination;var angularKeyPattern=new RegExp("^\\$+","i");for(var key in source)source.hasOwnProperty(key)&&destination.hasOwnProperty(key)&&!angularKeyPattern.test(key)&&!_.isFunction(source[key])&&(destination[key]=source[key]);return destination},_.filterWithProperty=function(collection,name,value){var filteredCollection=_.filter(collection,function(item){return item[name]===value});return filteredCollection},_.findWithProperty=function(collection,name,value){var result=_.find(collection,function(item){return item[name]===value});return result},_.findWithPropertyAndReplace=function(collection,name,value,replacement,operator){if(!collection||replacement===undefined)return collection;operator=operator||ng.noop;for(var i=0,length=collection.length;length>i;i++){var item=collection[i];if(item[name]===value)return collection[i]=operator(replacement,item)||replacement,collection}return collection.push(replacement),collection},_.indexOfWithProperty=function(collection,name,value){for(var i=0;i<collection.length;i++)if(collection[i][name]===value)return i;return-1},_.isValidEmail=function(value){var pattern=/^[^@]+@[^.]+(\.[^.]+)+$/i;return pattern.test(value)},_.keysWithTruthyValues=function(collection){var keys=_.keys(collection).filter(function(key){return collection[key]});return keys},_.notContainsProperty=function(collection,name,value){var filteredCollection=this.filter(collection,function(item){return!_.contains(item[name].toLowerCase(),value.toLowerCase())});return filteredCollection},_.maxProperty=function(collection,name){return collection.length?_.max(_.pluck(collection,name)):void 0},_.minProperty=function(collection,name){return _.min(_.pluck(collection,name))},_.moveRelative=function(collection,index,direction){if(index>collection.length)return collection;var maxIndex=collection.length-1,targetIndex={top:0,up:Math.max(0,index-1),down:Math.min(maxIndex,index+1),bottom:maxIndex};return _.swap(collection,index,targetIndex[direction])},_.normalizeMixedDataValue=function(value){var padding="000000000000000";return value=value.replace(/(\d+)((\.\d+)+)?/g,function($0,integer,decimal,repeatDecimal){return decimal!==repeatDecimal?padding.slice(integer.length)+integer+decimal:(decimal=decimal||".0",padding.slice(integer.length)+integer+decimal+padding.slice(decimal.length))})},_.rejectWithProperty=function(collection,name,value){var filteredCollection=_.reject(collection,function(item){return item[name]===value});return filteredCollection},_.setProperty=function(collection,name,value){return this.forEach(collection,function(item){item[name]=value}),collection},_.similar=function(collectionA,collectionB){var deltaA=_.difference(collectionA,collectionB).length,deltaB=_.difference(collectionB,collectionA).length;return deltaA+deltaB===0},_.sortOnProperty=function(collection,name,direction,caseInsensitive){direction=direction||"asc";var sortIndicator="asc"===direction?-1:1;return collection.sort(function(a,b){return caseInsensitive?a[name].toLowerCase()<b[name].toLowerCase()?sortIndicator:-sortIndicator:a[name]<b[name]?sortIndicator:-sortIndicator}),collection},_.sortOnPropertyUsingNaturalOrder=function(collection,name,direction){direction=direction||"asc";var sortModifier="asc"===direction?1:-1,sortedCollection=collection.map(function(item){return{operand:_.normalizeMixedDataValue(item[name].toLowerCase()),original:item}}).sort(function(a,b){return sortModifier*a.operand.localeCompare(b.operand)}).map(function(sortedItem){return sortedItem.original});return sortedCollection},_.sortOnPropertyUsingLowerCase=function(collection,name,direction){direction=direction||"asc";var sortIndicator="asc"===direction?-1:1;return collection.sort(function(a,b){var nameA=(a[name]||"").toLowerCase(),nameB=(b[name]||"").toLowerCase();return nameB>nameA?sortIndicator:nameA>nameB?-sortIndicator:0}),collection},_.sumProperty=function(collection,name){for(var sum=0,i=0;i<collection.length;i++)sum+=collection[i][name];return sum},_.swap=function(collection,indexOne,indexTwo){var temp=collection[indexOne];return collection[indexOne]=collection[indexTwo],collection[indexTwo]=temp,collection},_.trim=function(value){return value.replace(/^\s+|\s+$/g,"")},_.withoutProperty=function(collection,name,value){var filteredCollection=this.filter(collection,function(item){return item[name]!==value});return filteredCollection},_.withoutPropertyRange=function(collection,name,valueRange){var filteredCollection=this.filter(collection,function(item){return-1===_.indexOf(valueRange,item[name])});return filteredCollection},_.withProperty=function(collection,name,value){var filteredCollection=this.filter(collection,function(item){return item[name]===value});return filteredCollection},_.withPropertyRange=function(collection,name,valueRange){var filteredCollection=this.filter(collection,function(item){return-1!==_.indexOf(valueRange,item[name])});return filteredCollection},_}app.factory("_",Factory)}(angular,InVision,_);;
//!file:render-context.js
!function(ng,app){"use strict";function RenderContext(requestContext,actionPrefix,paramNames){return this._requestContext=requestContext,this._actionPrefix=actionPrefix,this._paramNames=paramNames,this}app.value("RenderContext",RenderContext),RenderContext.prototype={getNextSection:function(){return this._requestContext.getNextSection(this._actionPrefix)},isChangeLocal:function(){return this._requestContext.startsWith(this._actionPrefix)},isChangeRelevant:function(){return this._requestContext.startsWith(this._actionPrefix)?this._requestContext.hasActionChanged()?!0:this._paramNames.length&&this._requestContext.haveParamsChanged(this._paramNames):!1}}}(angular,InVision);;
//!file:request-context.js
!function(ng,app){"use strict";function RequestContext(RenderContext){return this.RenderContext=RenderContext,this._action="",this._sections=[],this._params={},this._previousAction="",this._previousParams={},this}app.service("requestContext",RequestContext),RequestContext.prototype={getAction:function(){return this._action},getNextSection:function(prefix){if(!this.startsWith(prefix))return null;if(""===prefix)return this._sections[0];var depth=prefix.split(".").length;return depth===this._sections.length?null:this._sections[depth]},getParam:function(name){return this._params[name]||null},getParams:function(){return this._params||null},getParamAsInt:function(name,defaultValue){var valueAsInt=parseInt(this.getParam(name));return isNaN(valueAsInt)?defaultValue||0:valueAsInt},getPreviousAction:function(){return this._previousAction},getRenderContext:function(requestActionLocation,paramNames){return requestActionLocation=requestActionLocation||"",paramNames=paramNames||[],ng.isArray(paramNames)||(paramNames=[paramNames]),new this.RenderContext(this,requestActionLocation,paramNames)},hasActionChanged:function(){return this._action!==this._previousAction},hasParamChanged:function(paramName,paramValue){return ng.isUndefined(paramValue)?!(paramName in this._previousParams)&&paramName in this._params?!0:paramName in this._previousParams&&!(paramName in this._params)?!0:this._previousParams[paramName]!==this._params[paramName]:!this.isParam(paramName,paramValue)},haveParamsChanged:function(paramNames){for(var i=0,length=paramNames.length;length>i;i++)if(this.hasParamChanged(paramNames[i]))return!0;return!1},isParam:function(paramName,paramValue){return paramName in this._params&&this._params[paramName]==paramValue?!0:!1},setContext:function(action,routeParams){this._previousAction=this._action,this._previousParams=this._params,this._action=action,this._sections=action.split("."),this._params=ng.copy(routeParams)},startsWith:function(prefix){return prefix.length&&this._action!==prefix&&0!==this._action.indexOf(prefix+".")?!1:!0}}}(angular,InVision);;
//!file:app-shell.controller.js
!function(ng,app){"use strict";function AppController($scope,requestContext){function $onInit(){$scope.$on("requestContextChanged",handleRequestContextChanged),vm.subview=renderContext.getNextSection()}function collapse(){vm.isExpanded=!1}function expand(){vm.isExpanded=!0}function handleRequestContextChanged(){renderContext.isChangeRelevant()&&(vm.subview=renderContext.getNextSection())}var vm=this,renderContext=requestContext.getRenderContext();vm.isExpanded=!1,vm.subview="",vm.$onInit=$onInit,vm.collapse=collapse,vm.expand=expand}app.controller("invM1AppShell.AppController",AppController)}(angular,InVision);;
//!file:app-shell.directive.js
!function(ng,app){"use strict";function AppShellDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-235c39"),controller:"invM1AppShell.AppController",controllerAs:"vm",restrict:"E",scope:!0,template:'\n<header\n	ng-mouseenter="vm.expand()"\n	ng-mouseleave="vm.collapse()"\n	class="nav-panel"\n	ng-class="{\n		expanded: vm.isExpanded\n	}">\n\n	<a href="https://www.invisionapp.com/" target="_blank" class="logo">\n		<svg class="logo__svg">\n			<use xlink:href="#svg-sprite-logo"></use>\n		</svg>\n	</a>\n\n	<nav class="nav">\n		<a\n			href="#/overview"\n			ng-click="vm.collapse()"\n			class="nav__link"\n			ng-class="{ activated: ( vm.subview === \'overview\' ) }">\n			<svg aria-hidden="true" class="nav__icon">\n				<use xlink:href="#svg-sprite-home"></use>\n			</svg>\n			<span class="nav__label">\n				Home\n			</span>\n		</a>\n		<a\n			href="#/people"\n			ng-click="vm.collapse()"\n			class="nav__link"\n			ng-class="{ activated: ( vm.subview === \'people\' ) }">\n			<svg aria-hidden="true" class="nav__icon">\n				<use xlink:href="#svg-sprite-teams"></use>\n			</svg>\n			<span class="nav__label">\n				People\n			</span>\n		</a>\n		<a\n			href="#/screens"\n			ng-click="vm.collapse()"\n			class="nav__link"\n			ng-class="{ activated: ( vm.subview === \'screens\' ) }">\n			<svg aria-hidden="true" class="nav__icon">\n				<use xlink:href="#svg-sprite-screens"></use>\n			</svg>\n			<span class="nav__label">\n				Screens\n			</span>\n		</a>\n		<a\n			href="#/comments"\n			ng-click="vm.collapse()"\n			class="nav__link"\n			ng-class="{ activated: ( vm.subview === \'comments\' ) }">\n			<svg aria-hidden="true" class="nav__icon">\n				<use xlink:href="#svg-sprite-comment"></use>\n			</svg>\n			<span class="nav__label">\n				Comments\n			</span>\n		</a>\n		<a\n			href="#/thank-you"\n			ng-click="vm.collapse()"\n			class="nav__link nav__link--thanks"\n			ng-class="{ activated: ( vm.subview === \'thanks\' ) }">\n			<svg aria-hidden="true" class="nav__icon">\n				<use xlink:href="#svg-sprite-heart" class="use-as-default"></use>\n				<use xlink:href="#svg-sprite-heart-filled" class="use-as-hover"></use>\n			</svg>\n			<span class="nav__label">\n				Thank You\n			</span>\n		</a>\n	</nav>\n\n</header>\n\n<main class="main-panel" ng-switch="vm.subview">\n	<inv-m5-comments-view ng-switch-when="comments"></inv-m5-comments-view>\n	<inv-m2-overview-view ng-switch-when="overview"></inv-m2-overview-view>\n	<inv-m3-people-view ng-switch-when="people"></inv-m3-people-view>\n	<inv-m4-screens-view ng-switch-when="screens"></inv-m4-screens-view>\n	<inv-m12-redirect-view ng-switch-when="redirect"></inv-m12-redirect-view>\n	<inv-m13-thank-you-view ng-switch-when="thanks"></inv-m13-thank-you-view>\n</main>\n\n<inv-m16-modal-view class="modal-layer"></inv-m16-modal-view>\n'}}app.directive("invM1AppShell",AppShellDirective)}(angular,InVision);;
//!file:comments-view/comments-view.controller.js
!function(ng,app){"use strict";function ViewController($scope,requestContext){function $onDestroy(){}function $onInit(){$scope.$on("requestContextChanged",handleRequestContextChanged),vm.subview=renderContext.getNextSection()}function handleRequestContextChanged(){renderContext.isChangeRelevant()&&(vm.subview=renderContext.getNextSection())}var vm=this,renderContext=requestContext.getRenderContext("comments");vm.subview="",vm.$onDestroy=$onDestroy,vm.$onInit=$onInit}app.controller("invM5CommentsView.ViewController",ViewController)}(angular,InVision);;
//!file:comments-view/comments-view.directive.js
!function(ng,app){"use strict";function CommentsViewDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-1958a7"),controller:"invM5CommentsView.ViewController",controllerAs:"vm",restrict:"E",scope:!0,template:"\n<inv-m9-detail-view ng-if=\"( vm.subview === 'detail' )\"></inv-m9-detail-view>\n<inv-m8-list-view ng-if=\"( vm.subview === 'list' )\"></inv-m8-list-view>\n"}}app.directive("invM5CommentsView",CommentsViewDirective)}(angular,InVision);;
//!file:comments-view/detail-view/auto-linker.directive.js
!function(ng,app){"use strict";function AutoLinkerDirective($location,_){function link(scope,element,attributes){function handleDestroy(){clearTimeout(timer)}function injectLinks(){var tokenPattern=/::placeholder::\d+::\d+::/g,tokenPrefix="::placeholder::"+Date.now()+"::",tokenSuffix="::",tokenCounter=0,placeholders=Object.create(null),result=element.text().replace(/(?:(\bhttps?:\/\/)|(\bwww\d{0,3}\.))(\S+)/gi,function($0,withProtocol,withoutProcol,urlSuffix){var lastLetter=urlSuffix.slice(-1),removeLastLetter=!1,trailing="";switch(lastLetter){case"?":case".":case",":case"'":case'"':case"“":case"”":case"‘":case"’":case"`":case"!":case";":removeLastLetter=!0;break;case")":removeLastLetter=isUnbalanced(urlSuffix,"(",")");break;case"]":removeLastLetter=isUnbalanced(urlSuffix,"[","]");break;case">":removeLastLetter=isUnbalanced(urlSuffix,"<",">")}removeLastLetter&&(trailing=lastLetter,urlSuffix=urlSuffix.slice(0,-1));var linkText=(withProtocol||withoutProcol)+urlSuffix,linkHref=withProtocol?withProtocol+urlSuffix:"http://"+withoutProcol+urlSuffix,token=tokenPrefix+ ++tokenCounter+tokenSuffix;return placeholders[token]=document.createElement("A"),placeholders[token].textContent=linkText,placeholders[token].href="#/redirect?externalUrl="+encodeURIComponent(linkHref)+"&sourceUrl="+encodeURIComponent($location.url()),token+trailing});if(tokenCounter){var html=element.text(result).html().replace(tokenPattern,function(token){return placeholders[token].outerHTML});element.html(html)}}function isUnbalanced(text,openChar,closeChar){for(var openCount=0,closeCount=0,i=0;i<text.length;i++)switch(text[i]){case openChar:openCount++;break;case closeChar:closeCount++}return openCount!=closeCount}var timer=setTimeout(injectLinks,750);scope.$on("$destroy",handleDestroy)}return{link:link,restrict:"A"}}app.directive("invM10AutoLinker",AutoLinkerDirective)}(angular,InVision);;
//!file:comments-view/detail-view/conversation-view.controller.js
!function(ng,app){"use strict";function ViewController($element,$location,$scope,_,db,formatDate,formatNumber,requestContext,viewScroller){function $onDestroy(){}function $onInit(){$scope.$on("requestContextChanged",handleRequestContextChanged),vm.conversationID=requestContext.getParamAsInt("conversationID"),loadRemoteData(),viewScroller.scroll($element.find(".main-panel"))}function handleRequestContextChanged(){renderContext.isChangeRelevant()&&requestContext.hasParamChanged("conversationID")&&(vm.conversationID=requestContext.getParamAsInt("conversationID"),loadRemoteData(),viewScroller.scroll($element.find(".main-panel")))}function loadRemoteData(){vm.conversation=db.conversationsByID[vm.conversationID],vm.conversation&&(setScreen(),setComments(),setDateIndex(),setUserIndex(),setHotspotCount())}function setComments(){vm.comments=vm.conversation.comments.map(function(comment){var paragraphs=comment.comment.split(/[\r\n]+/);return{id:comment.id,userID:comment.userID,createdAt:comment.createdAt,paragraphs:paragraphs}})}function setDateIndex(){vm.dateIndex=Object.create(null),vm.conversation.comments.forEach(function(comment){vm.dateIndex[comment.createdAt]=formatDate(comment.createdAt)})}function setHotspotCount(){vm.hotspotCount=db.hotspotsByScreenID[vm.screen.id]?formatNumber(db.hotspotsByScreenID[vm.screen.id].length):null}function setScreen(){vm.screen=db.screensByID[vm.conversation.screenID]}function setUserIndex(){vm.userIndex=db.usersByID}var vm=this,renderContext=($scope.props=$scope,requestContext.getRenderContext("comments.detail",["conversationID"]));vm.conversationID=0,vm.conversation=null,vm.comments=null,vm.screen=null,vm.dateIndex=null,vm.userIndex=null,vm.hotspotCount=null,vm.$onDestroy=$onDestroy,vm.$onInit=$onInit}app.controller("invM10ConversationView.ViewController",ViewController)}(angular,InVision);;
//!file:comments-view/detail-view/conversation-view.directive.js
!function(ng,app){"use strict";function ConversationViewDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-2e45c2"),controller:"invM10ConversationView.ViewController",controllerAs:"vm",restrict:"E",scope:{isShowingCompleted:"=",onGotoNextConversation:"&",onGotoPrevConversation:"&",onToggleCompleted:"&"},template:'\n<div class="main-panel">\n	<div class="ids-content-pane">\n\n		<h1 class="ids-h1 title">\n			<span class="title__type" ng-switch="vm.conversation.type">\n				<span ng-switch-when="comment">\n					Comment\n				</span>\n				<span ng-switch-when="note">\n					Note\n				</span>\n				<span ng-switch-when="private">\n					Private Comment\n				</span>\n				<span ng-switch-when="tourpoint">\n					Tour Point\n				</span>\n			</span>\n			<span class="title__marker {{ vm.conversation.type }}">\n				{{ vm.conversation.label }}\n\n				<svg ng-if="vm.conversation.isComplete" class="checkmark">\n					<use xlink:href="#svg-sprite-check-smaller"></use>\n				</svg>\n			</span>\n		</h1>\n\n		<p class="metadata ids-break-word">\n			<strong class="metadata__label">Screen:</strong>\n			<span class="metadata__value"><a ng-href="#/screens/{{ vm.screen.id }}">{{ vm.screen.name }}</a></span>\n		</p>\n\n		<p class="metadata">\n			<strong class="metadata__label">Status:</strong>\n			<span class="metadata__value">{{ vm.conversation.isComplete ? "Completed" : "Open" }}</span>\n		</p>\n\n		<p ng-if="vm.hotspotCount" class="metadata">\n			<strong class="metadata__label">Hotspots:</strong>\n			<span class="metadata__value"><a ng-href="#/screens/{{ vm.screen.id }}">{{ vm.hotspotCount }}</a></span>\n		</p>\n\n		<inv-m10-preview\n			ng-if="vm.screen.imageUrl"\n			screen="vm.screen"\n			conversation="vm.conversation"\n			class="preview">\n		</inv-m10-preview>\n\n		<ul class="comments">\n			<li\n				ng-repeat="comment in vm.comments track by comment.id"\n				class="comments__item">\n\n				<div class="comment-card">\n					<div class="comment-card__header">\n						<div class="comment-card__name">\n							{{ :: vm.userIndex[ comment.userID ].name }}\n						</div>\n						<div class="comment-card__date">\n							{{ :: vm.dateIndex[ comment.createdAt ] }}\n						</div>\n					</div>\n					<div class="comment-card__email">\n						{{ :: vm.userIndex[ comment.userID ].email }}\n					</div>\n					<div class="comment-card__main">\n						<p\n							ng-repeat="paragraph in :: comment.paragraphs"\n							inv-m10-auto-linker\n							class="ids-text ids-break-word">\n							{{ :: paragraph }}\n						</p>\n					</div>\n				</div>\n\n			</li>\n		</ul>\n\n	</div>\n</div>\n\n<div class="tools-panel tools">\n\n	<button\n		ng-click="props.onToggleCompleted()"\n		class="toggle-completed tool tool--toggle">\n		<ids-switch\n			is-on="props.isShowingCompleted"\n			class="toggle-completed__switch">\n		</ids-switch>\n		<span class="toggle-completed__label">\n			Show completed\n		</span>\n	</button>\n	<button\n		ng-click="props.onGotoPrevConversation()"\n		class="ids-primary-button ids-primary-button--stroked tool tool--prev">\n		Prev\n	</button>\n	<button\n		ng-click="props.onGotoNextConversation()"\n		class="ids-primary-button ids-primary-button--stroked tool tool--next">\n		Next\n	</button>\n\n</div>\n'}}app.directive("invM10ConversationView",ConversationViewDirective)}(angular,InVision);;
//!file:comments-view/detail-view/detail-view.controller.js
!function(ng,app){"use strict";function ViewController($element,$location,$scope,_,db,keyCommandsPriority,keyCommandsService,requestContext,viewScroller,windowTitle){function $onDestroy(){unlistenToKeyCommands&&unlistenToKeyCommands(),scrollToTimer&&clearTimeout(scrollToTimer)}function $onInit(){unlistenToKeyCommands=keyCommandsService.listen({ArrowLeft:handleKeyArrowLeft,ArrowRight:handleKeyArrowRight,Escape:handleKeyEscape},{priority:keyCommandsPriority.MAIN}),$scope.$on("requestContextChanged",handleRequestContextChanged),vm.screenID=requestContext.getParamAsInt("screenID"),vm.conversationID=requestContext.getParamAsInt("conversationID"),setPrevNextIndex(),loadRemoteData(),viewScroller.scrollAll($element.find(".main-panel"))}function gotoNextConversation(){var entry=vm.prevNextIndex[vm.conversationID],target=!vm.isShowingCompleted&&entry.nextOpen?entry.nextOpen:entry.next;$location.url("/comments/"+target.screenID+"/"+target.id)}function gotoPrevConversation(){var entry=vm.prevNextIndex[vm.conversationID],target=!vm.isShowingCompleted&&entry.prevOpen?entry.prevOpen:entry.prev;$location.url("/comments/"+target.screenID+"/"+target.id)}function hideCompleted(){vm.isShowingCompleted=IS_SHOWING_COMPLETED=!1}function showCompleted(){vm.isShowingCompleted=IS_SHOWING_COMPLETED=!0}function toggleCompleted(){vm.isShowingCompleted?hideCompleted():showCompleted()}function handleKeyArrowLeft(event){event.preventDefault(),gotoPrevConversation()}function handleKeyArrowRight(event){event.preventDefault(),gotoNextConversation()}function handleKeyEscape(event){$location.url("/comments")}function handleRequestContextChanged(){if(renderContext.isChangeRelevant()){if(requestContext.hasParamChanged("screenID"))return vm.screenID=requestContext.getParamAsInt("screenID"),vm.conversationID=requestContext.getParamAsInt("conversationID"),loadRemoteData(),void viewScroller.scrollAll($element.find(".main-panel"));if(requestContext.hasParamChanged("conversationID")){if(vm.conversationID=requestContext.getParamAsInt("conversationID"),!vm.conversationIndex[vm.conversationID])return $location.replace(),void $location.url("/comments/"+vm.screen.id+"/"+vm.conversations[0].id);setWindowTitle(),scrollToSelectedMarker()}}}function loadRemoteData(){return vm.prototype=db.prototype,vm.screen=db.screensByID[vm.screenID],vm.screen?(vm.conversations=db.conversationsByScreenID[vm.screen.id]||[],setConversationIndex(),vm.conversations.length?vm.conversationIndex[vm.conversationID]?(setWindowTitle(),void scrollToSelectedMarker()):($location.replace(),void $location.url("/comments/"+vm.screen.id+"/"+vm.conversations[0].id)):($location.replace(),void $location.url("/comments"))):($location.replace(),void $location.url("/comments"))}function scrollToSelectedMarker(){clearTimeout(scrollToTimer),scrollToTimer=setTimeout(function(){scrollToTimer=null,viewScroller.scrollIntoView($element.find(".marker.selected"))},100)}function setConversationIndex(){vm.conversationIndex=_.indexBy(vm.conversations,"id")}function setPrevNextIndex(){var allConversations=[],openConversations=[];if(db.screens.forEach(function(screen){db.conversationsByScreenID[screen.id]&&db.conversationsByScreenID[screen.id].forEach(function(conversation){allConversations.push(conversation),conversation.isComplete||openConversations.push(conversation)})}),vm.prevNextIndex=Object.create(null),allConversations.forEach(function(conversation,i){vm.prevNextIndex[conversation.id]={prev:allConversations[i-1]||_.last(allConversations),next:allConversations[i+1]||_.first(allConversations),prevOpen:null,nextOpen:null}}),openConversations.length){var prevOpen=_.last(openConversations);allConversations.forEach(function(conversation){var entry=vm.prevNextIndex[conversation.id];entry.prevOpen=prevOpen,conversation.isComplete||(prevOpen=conversation)});var nextOpen=_.first(openConversations);_.forEachRight(allConversations,function(conversation){var entry=vm.prevNextIndex[conversation.id];entry.nextOpen=nextOpen,conversation.isComplete||(nextOpen=conversation)})}}function setWindowTitle(){var marker=vm.conversationIndex[vm.conversationID];windowTitle.set(vm.screen.name+" ("+(marker.label||"tour point")+")")}var vm=this,renderContext=requestContext.getRenderContext("comments.detail",["screenID","conversationID"]),unlistenToKeyCommands=null,scrollToTimer=null;vm.screenID=0,vm.conversationID=0,vm.prototype=null,vm.screen=null,vm.conversations=null,vm.conversationIndex=null,vm.prevNextIndex=null,vm.isShowingCompleted=IS_SHOWING_COMPLETED,vm.$onDestroy=$onDestroy,vm.$onInit=$onInit,vm.gotoNextConversation=gotoNextConversation,vm.gotoPrevConversation=gotoPrevConversation,vm.hideCompleted=hideCompleted,vm.showCompleted=showCompleted,vm.toggleCompleted=toggleCompleted}app.controller("invM9DetailView.ViewController",ViewController);var IS_SHOWING_COMPLETED=!0}(angular,InVision);;
//!file:comments-view/detail-view/detail-view.directive.js
!function(ng,app){"use strict";function DetailViewDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-6ca6cb"),controller:"invM9DetailView.ViewController",controllerAs:"vm",restrict:"E",scope:!0,template:'\n<div class="main-panel">\n\n	<div\n		class="screen-portal"\n		ng-class="{\n			\'screen-portal--open\': ! vm.isShowingCompleted\n		}"\n		ng-style="{\n			width: ( vm.screen.width + \'px\' ),\n			height: ( vm.screen.height + \'px\' )\n		}">\n\n		<img\n			ng-if="vm.screen.imageUrl"\n			ng-src="{{ vm.screen.imageUrl }}"\n			class="screen"\n			ng-style="{\n				width: ( vm.screen.width + \'px\' ),\n				height: ( vm.screen.height + \'px\' )\n			}"\n		/>\n\n		<a\n			ng-repeat="conversation in vm.conversations track by conversation.id"\n			ng-href="#/comments/{{ :: vm.screen.id }}/{{ :: conversation.id }}"\n			class="point"\n			ng-style=":: {\n				left: ( conversation.x + \'px\' ),\n				top: ( conversation.y + \'px\' )\n			}">\n			<span\n				class="marker {{ :: conversation.type }}"\n				ng-class="{\n					completed: conversation.isComplete,\n					selected: ( vm.conversationID === conversation.id )\n				}">\n				{{ :: conversation.label }}\n\n				<svg ng-if=":: conversation.isComplete" class="checkmark">\n					<use xlink:href="#svg-sprite-check-smaller"></use>\n				</svg>\n			</span>\n		</a>\n\n	</div>\n\n</div>\n\n<inv-m10-conversation-view\n	ng-if="vm.conversationID"\n	is-showing-completed="vm.isShowingCompleted"\n	on-toggle-completed="vm.toggleCompleted()"\n	on-goto-next-conversation="vm.gotoNextConversation()"\n	on-goto-prev-conversation="vm.gotoPrevConversation()"\n	class="aside-panel">\n</inv-m10-conversation-view>\n'}}app.directive("invM9DetailView",DetailViewDirective)}(angular,InVision);;
//!file:comments-view/detail-view/preview.controller.js
!function(ng,app){"use strict";function PreviewController($element,$scope){function $onDestroy(){}function $onInit(){$scope.$watch("props.conversation",handleConversationChange)}function handleConversationChange(){setCompositeTransform(),$scope.$applyAsync(setCompositeTransform)}function setCompositeTransform(){var rect=$element[0].getBoundingClientRect(),previewWidth=rect.width,previewHeight=rect.height,centerX=previewWidth/2,centerY=previewHeight/2,screenWidth=props.screen.width,screenHeight=props.screen.height,commentX=props.conversation.x,commentY=props.conversation.y,translateX=0,translateY=0;translateX=previewWidth>screenWidth?(previewWidth-screenWidth)/2:centerX>=commentX?0:centerX>screenWidth-commentX?previewWidth-screenWidth:centerX-commentX,translateY=previewHeight>screenHeight?(previewHeight-screenHeight)/2:centerY>=commentY?0:centerY>screenHeight-commentY?previewHeight-screenHeight:centerY-commentY,vm.compositeTransform="translate3d( "+translateX+"px, "+translateY+"px, 0px )"}var vm=this,props=$scope.props=$scope;vm.compositeTransform="translate3d( 0, 0, 0 )",vm.$onDestroy=$onDestroy,vm.$onInit=$onInit}app.controller("invM10Preview.Controller",PreviewController)}(angular,InVision);;
//!file:comments-view/detail-view/preview.directive.js
!function(ng,app){"use strict";function PreviewDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-d5c79a"),controller:"invM10Preview.Controller",controllerAs:"vm",restrict:"E",scope:{screen:"=",conversation:"="},template:'\n<div\n	class="composite"\n	ng-style="{\n		width: ( props.screen.width + \'px\' ),\n		height: ( props.screen.height + \'px\' ),\n		transform: vm.compositeTransform\n	}">\n\n	<img\n		ng-src="{{ props.screen.imageUrl }}"\n		class="screen"\n		ng-style="{\n			width: ( props.screen.width + \'px\' ),\n			height: ( props.screen.height + \'px\' )\n		}"\n	/>\n\n	<span\n		class="point"\n		ng-style="{\n			left: ( props.conversation.x + \'px\' ),\n			top: ( props.conversation.y + \'px\' )\n		}">\n		<span class="marker"></span>\n	</span>\n\n</div>'}}app.directive("invM10Preview",PreviewDirective)}(angular,InVision);;
//!file:comments-view/list-view/list-view.controller.js
!function(ng,app){"use strict";function ViewController($element,$location,$scope,_,db,formatNumber,requestContext,searchService,viewScroller,windowTitle){function $onDestroy(){}function $onInit(){$scope.$on("requestContextChanged",handleRequestContextChanged);var urlFilters=getFiltersFromUrlWithSaneDefaults();vm.filters.keywords=urlFilters.keywords,vm.filters.userID=urlFilters.userID,vm.filters.status=urlFilters.status,vm.filters.page=urlFilters.page,loadRemoteData(),viewScroller.scrollAll($element)}function applyForm(){$location.search("keywords",vm.form.keywords||null),$location.search("userID",vm.form.userOption.id||null),$location.search("status",vm.form.statusOption.id||null),$location.search("page",null)}function applyPage(page){$location.search("page",page)}function clearForm(){$location.replace(),$location.search("keywords",null),$location.search("userID",null),$location.search("status",null),$location.search("page",null)}function scrollToTop(){viewScroller.scrollAll($element)}function buildConversationsResult(screen,conversations){var mapped=conversations.map(function(conversation){var keywordInputs=_.pluck(conversation.comments,"comment");keywordInputs.unshift(screen.name);var userIndex=Object.create(null),keywords=searchService.normalizeInputs(keywordInputs);return conversation.comments.forEach(function(comment){userIndex[comment.userID]=!0}),{id:conversation.id,type:conversation.type,label:conversation.label,isComplete:conversation.isComplete,userIndex:userIndex,keywords:keywords}});return mapped}function getFiltersFromUrlWithSaneDefaults(){var search=$location.search();return{keywords:search.keywords||"",userID:+search.userID||0,status:search.status||"",page:+search.page||1}}function handleRequestContextChanged(){if(renderContext.isChangeRelevant()||!requestContext.hasActionChanged()){var urlFilters=getFiltersFromUrlWithSaneDefaults();urlFilters.keywords!==vm.filters.keywords||urlFilters.userID!==vm.filters.userID||urlFilters.status!==vm.filters.status?(vm.filters.keywords=urlFilters.keywords,vm.filters.userID=urlFilters.userID,vm.filters.status=urlFilters.status,vm.filters.page=urlFilters.page,setFormFiltered(),setResultsFiltered(),setPagination(),setWindowTitle()):urlFilters.page!==vm.filters.page&&(vm.filters.page=urlFilters.page,setFormFiltered(),setPagination(),setWindowTitle())}}function loadRemoteData(){vm.prototype=db.prototype,setForm(),setFormFiltered(),setResults(),setResultsFiltered(),setPagination(),setOverviewCount(),setWindowTitle()}function setForm(){vm.form.keywords="",vm.form.userOptions=[{id:0,value:" - All users - "}],vm.form.userOption=vm.form.userOptions[0],db.users.forEach(function(user){db.commentsByUserID[user.id]&&vm.form.userOptions.push({id:user.id,value:user.name+" <"+user.email+">"})}),vm.form.statusOptions=[{id:"",value:" - All conversations - "},{id:"open",value:"Open"},{id:"closed",value:"Closed"}],vm.form.statusOption=vm.form.statusOptions[0]}function setFormFiltered(){vm.form.keywords=vm.filters.keywords,vm.form.userOption=_.findWithProperty(vm.form.userOptions,"id",vm.filters.userID),vm.form.statusOption=_.findWithProperty(vm.form.statusOptions,"id",vm.filters.status),vm.form.page=vm.filters.page}function setPagination(){var pageSize=25,pageCount=Math.ceil(vm.filteredResults.length/pageSize),pageNumber=vm.filters.page=_.clamp(vm.filters.page,1,pageCount),pageLinks=[],startIndex=(pageNumber-1)*pageSize,endIndex=startIndex+pageSize,results=vm.filteredResults.slice(startIndex,endIndex);if(pageCount>1)for(var i=1;pageCount>=i;i++)pageLinks.push({pageNumber:i,label:i});vm.pagination={pageSize:pageSize,pageCount:pageCount,pageNumber:pageNumber,pageLinks:pageLinks,results:results}}function setResults(){vm.results=db.screens.filter(function(screen){return db.conversationsByScreenID[screen.id]}).map(function(screen){var conversations=buildConversationsResult(screen,db.conversationsByScreenID[screen.id]);return{screen:screen,conversations:conversations}})}function setResultsFiltered(){if(!vm.filters.keywords&&!vm.filters.userID&&!vm.filters.status)return void(vm.filteredResults=vm.results);var normalizedKeywords=searchService.normalize(vm.filters.keywords);vm.filteredResults=vm.results.map(function(result){var conversations=result.conversations.filter(function(conversation){return vm.filters.userID&&!conversation.userIndex[vm.filters.userID]?!1:"open"===vm.filters.status&&conversation.isComplete?!1:"closed"!==vm.filters.status||conversation.isComplete?normalizedKeywords&&!_.includes(conversation.keywords,normalizedKeywords)?!1:!0:!1});return{screen:result.screen,conversations:conversations}}).filter(function(result){return result.conversations.length})}function setOverviewCount(){vm.overviewCount={},vm.overviewCount.comments=1===db.comments.length?"was 1 comment":"were "+formatNumber(db.comments.length)+" comments",vm.overviewCount.conversations=1===db.conversations.length?"1 conversation":formatNumber(db.conversations.length)+" conversations",vm.overviewCount.screens=1===vm.results.length?"1 screen":formatNumber(vm.results.length)+" screens"}function setWindowTitle(){vm.filters.page>1?windowTitle.set("Comments (page "+vm.filters.page+")"):windowTitle.set("Comments")}var vm=this,renderContext=requestContext.getRenderContext("comments.list");vm.prototype=null,vm.results=null,vm.filteredResults=null,vm.pagination=null,vm.overviewCount=null,vm.filters={keywords:"",userID:0,status:"",page:1},vm.form={keywords:"",userOption:null,userOptions:[],statusOption:null,statusOptions:[],page:1},vm.$onDestroy=$onDestroy,vm.$onInit=$onInit,vm.applyForm=applyForm,vm.applyPage=applyPage,vm.clearForm=clearForm,vm.scrollToTop=scrollToTop}app.controller("invM8ListView.ViewController",ViewController)}(angular,InVision);;
//!file:comments-view/list-view/list-view.directive.js
!function(ng,app){"use strict";function ListViewDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-693c31"),controller:"invM8ListView.ViewController",controllerAs:"vm",restrict:"E",scope:!0,template:'\n<div class="ids-content-pane">\n\n	<h1 class="ids-h1">\n		Comments\n	</h1>\n\n	<p class="ids-text">\n		At the time of the export, there {{ :: vm.overviewCount.comments }} in {{ :: vm.prototype.name }}, spread across {{ :: vm.overviewCount.conversations }} and {{ :: vm.overviewCount.screens }}.\n	</p>\n\n	<form ng-submit="vm.applyForm()" class="ids-form-bar">\n		<div class="ids-form-bar__entry">\n			<label for="form--keywords" class="ids-form-bar__label">\n				Search:\n			</label>\n			<div class="ids-form-bar__body">\n				<input\n					id="form--keywords"\n					type="text"\n					ng-model="vm.form.keywords"\n					ng-model-options="{ debounce: 300 }"\n					ng-change="vm.applyForm()"\n					class="ids-input keywords-input"\n				/>\n			</div>\n		</div>\n		<div class="ids-form-bar__entry">\n			<label for="form--user" class="ids-form-bar__label">\n				User:\n			</label>\n			<div class="ids-form-bar__body">\n				<ids-select\n					control-id="form--user"\n					ng-model="vm.form.userOption"\n					options="vm.form.userOptions"\n					option-label="value"\n					ng-change="vm.applyForm()"\n					class="user-input">\n				</ids-select>\n			</div>\n		</div>\n		<div class="ids-form-bar__entry">\n			<label for="form--status" class="ids-form-bar__label">\n				Status:\n			</label>\n			<div class="ids-form-bar__body">\n				<ids-select\n					control-id="form--status"\n					ng-model="vm.form.statusOption"\n					options="vm.form.statusOptions"\n					option-label="value"\n					ng-change="vm.applyForm()"\n					class="status-input">\n				</ids-select>\n			</div>\n		</div>\n		<div\n			ng-if="( vm.form.keywords || vm.filters.userID || vm.filters.status )"\n			class="ids-form-bar__buttons">\n			<button\n				type="button"\n				ng-click="vm.clearForm()"\n				class="ids-primary-button ids-primary-button--inline">\n				Clear\n			</button>\n		</div>\n	</form>\n\n	<table ng-if="vm.pagination.results.length" class="ids-table">\n	<thead>\n		<tr>\n			<th class="ids-table__th" style="width: 50% ;">\n				Screen\n			</th>\n			<th class="ids-table__th">\n				Conversations\n			</th>\n		</tr>\n	</thead>\n	<tbody>\n		<tr ng-repeat="result in vm.pagination.results track by result.screen.id">\n			<td class="ids-table__td ids-table__td--no-padding">\n				<!--\n					NOTE: We need to include the first conversation ID so that if we\'re\n					filtering on a user ID, we don\'t default to a conversation that\n					doesn\'t include said user.\n				-->\n				<a\n					ng-href="#/comments/{{ :: result.screen.id }}/{{ :: result.conversations[ 0 ].id }}"\n					class="ids-table__block">\n					{{ :: result.screen.name }}\n				</a>\n			</td>\n			<td class="ids-table__td">\n				<div class="markers">\n					<a\n						ng-repeat="conversation in result.conversations track by conversation.id"\n						ng-href="#/comments/{{ :: result.screen.id }}/{{ :: conversation.id }}"\n						class="marker {{ :: conversation.type }}"\n						ng-class=":: {\n							\'marker--complete\': conversation.isComplete\n						}">\n						{{ conversation.label }}\n					</a>\n				</div>\n			</td>\n		</tr>\n	</tbody>\n	</table>\n\n\n	<form ng-if="( vm.pagination.pageCount > 1 )" class="ids-form-bar">\n		<div class="ids-form-bar__entry">\n			<label for="form--page" class="ids-form-bar__label">\n				Page:\n			</label>\n			<div class="ids-form-bar__body">\n				<ids-select\n					control-id="form--page"\n					ng-model="vm.form.page"\n					options="vm.pagination.pageLinks"\n					option-key="pageNumber"\n					option-label="pageNumber"\n					ng-change="vm.applyPage( vm.form.page ); vm.scrollToTop()"\n					class="page-input">\n				</ids-select>\n			</div>\n		</div>\n		<div\n			class="ids-form-bar__buttons"\n			ng-switch="( vm.pagination.pageNumber < vm.pagination.pageCount )">\n			<button\n				ng-switch-when="true"\n				type="button"\n				ng-click="vm.applyPage( vm.pagination.pageNumber + 1 ); vm.scrollToTop()"\n				class="ids-primary-button ids-primary-button--inline">\n				Next &rarr;\n			</button>\n			<button\n				ng-switch-when="false"\n				type="button"\n				ng-click="vm.applyPage( 1 ); vm.scrollToTop()"\n				class="ids-primary-button ids-primary-button--inline">\n				Reset &circlearrowleft;\n			</button>\n		</div>\n	</form>\n\n\n	<ids-not-found ng-if="( ! vm.filteredResults.length )">\n		<h2 class="ids-h2">\n			No matches\n		</h2>\n		<p class="ids-p">\n			<a href="#/comments/list">Clear filters</a>.\n		</p>\n	</ids-not-found>\n\n</div>\n'}}app.directive("invM8ListView",ListViewDirective)}(angular,InVision);;
//!file:modal-view/modal-view.controller.js
!function(ng,app){"use strict";function ViewController($location,$rootScope){function $onInit(){$rootScope.$on("$routeChangeSuccess",handleRouteChangeSuccess),setSubview()}function handleRouteChangeSuccess(){setSubview()}function setSubview(){vm.subview=$location.search().modal||null}var vm=this;vm.subview=null,vm.$onInit=$onInit}app.controller("invM16ModalView.ViewController",ViewController)}(angular,InVision);;
//!file:modal-view/modal-view.directive.js
!function(ng,app){"use strict";function ModalViewDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-4b6d3d"),controller:"invM16ModalView.ViewController",controllerAs:"vm",restrict:"E",scope:!0,template:'\n<!-- The modal-view is really only a "launcher" for the modal experience. -->\n<inv-m16-modal-wrapper\n	ng-if="vm.subview"\n	subview="vm.subview">\n</inv-m16-modal-wrapper>\n'}}app.directive("invM16ModalView",ModalViewDirective)}(angular,InVision);;
//!file:modal-view/modal-wrapper.controller.js
!function(ng,app){"use strict";function WrapperController($location,$scope,keyCommandsPriority,keyCommandsService){function $onDestroy(){unlistenToKeyCommands&&unlistenToKeyCommands()}function $onInit(){unlistenToKeyCommands=keyCommandsService.listen({Escape:handleKeyEscape},{priority:keyCommandsPriority.MODAL_WRAPPER,allowInputCapture:!0})}function closeModal(isReplace){isReplace&&$location.replace();for(var key in $location.search())key.startsWith("modal")&&$location.search(key,null)}function handleKeyEscape(event){closeModal()}var vm=this,unlistenToKeyCommands=($scope.props=$scope,null);vm.$onDestroy=$onDestroy,vm.$onInit=$onInit,vm.closeModal=closeModal}app.controller("invM16ModalWrapper.WrapperController",WrapperController)}(angular,InVision);;
//!file:modal-view/modal-wrapper.directive.js
!function(ng,app){"use strict";function ModalWrapperDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-319e19"),controller:"invM16ModalWrapper.WrapperController",controllerAs:"vm",restrict:"E",scope:{subview:"="},template:'\n<button\n	ng-click="vm.closeModal()"\n	class="ids-primary-button ids-primary-button--plain close">\n	<svg class="close__icon">\n		<title>Close modal</title>\n		<use xlink:href="#svg-sprite-close"></use>\n	</svg>\n</button>\n\n<div class="inner" ng-switch="props.subview">\n\n	<inv-m17-search-view ng-switch-when="search"></inv-m17-search-view>\n\n	<!--\n		Since the modal isn\'t managed by the router, we don\'t get the benefit of automatic\n		redirection. As such, we\'re going to use the default case to automatically close\n		the modal if no matching view was found.\n	-->\n	<button\n		ng-switch-default\n		ng-init="vm.closeModal( true )">\n	</button>\n\n</div>\n'}}app.directive("invM16ModalWrapper",ModalWrapperDirective)}(angular,InVision);;
//!file:modal-view/search-view/search-view.controller.js
!function(ng,app){"use strict";function ViewController($element,$location,$scope,_,appConfig,db,keyCommandsPriority,keyCommandsService,searchService,viewScroller){function $onDestroy(){unlistenToKeyCommands&&unlistenToKeyCommands()}function $onInit(){unlistenToKeyCommands=keyCommandsService.listen({ArrowDown:handleKeyArrowDown,ArrowUp:handleKeyArrowUp,Enter:handleKeyEnter,Escape:handleKeyEscape},{priority:keyCommandsPriority.MODAL,allowInputCapture:!0}),loadRemoteData()}function applyKeywords(){vm.selectedIndex=0,setResultsFiltered(),setResultsRendered()}function clearKeywords(){vm.filters.keywords="",vm.selectedIndex=0,setResultsFiltered(),setResultsRendered()}function handleKeyArrowDown(event){event.preventDefault(),vm.resultsRendered.length&&(vm.resultsRendered[++vm.selectedIndex]||(vm.selectedIndex=0),scrollSelectedActionIntoView())}function handleKeyArrowUp(event){event.preventDefault(),vm.resultsRendered.length&&(vm.resultsRendered[--vm.selectedIndex]||(vm.selectedIndex=vm.resultsRendered.length-1),scrollSelectedActionIntoView())}function handleKeyEnter(event){event.preventDefault(),vm.resultsRendered.length&&$location.url(vm.resultsRendered[vm.selectedIndex].href)}function handleKeyEscape(event){return vm.filters.keywords?(event.preventDefault(),void clearKeywords()):!0}function loadRemoteData(){vm.prototype=db.prototype,vm.screens=db.screens,setResults(),setResultsFiltered(),setResultsRendered(),setIncludeGroups()}function scrollSelectedActionIntoView(){setTimeout(function(){viewScroller.scrollIntoView($element.find(".screens__link--selected"),"instant","nearest")},100)}function setIncludeGroups(){vm.includeGroups=vm.prototype.sortTypeID===sortTypes.manual}function setResults(){var noDivider={id:0,name:""};vm.results=db.screens.map(function(screen){var keywords=searchService.normalizeInputs([screen.name,screen.clientFilename]),divider=db.dividersByID[screen.screenGroupID]||noDivider,href="/screens/"+screen.id;return{keywords:keywords,divider:divider,href:href,screen:screen,indexForSelection:null}})}function setResultsFiltered(){if(!vm.filters.keywords)return void(vm.resultsFiltered=vm.results.slice());var normalizedKeywords=searchService.normalize(vm.filters.keywords);vm.resultsFiltered=vm.results.filter(function(result){return normalizedKeywords&&!_.includes(result.keywords,normalizedKeywords)?!1:!0})}function setResultsRendered(){vm.resultsRendered=vm.resultsFiltered.slice(0,vm.maxResultCount),vm.resultsRenderedByGroup=[];var group={id:-1,name:"",results:[]},indexForSelection=0;vm.resultsRendered.forEach(function(result){result.divider.id!==group.id&&(group={id:result.divider.id,name:result.divider.name,results:[]},vm.resultsRenderedByGroup.push(group)),result.indexForSelection=indexForSelection++,group.results.push(result)})}var vm=this,sortTypes=appConfig.prototypeSettings.sortTypes,unlistenToKeyCommands=null;vm.prototype=null,vm.screens=null,vm.results=null,vm.resultsFiltered=null,vm.resultsRendered=null,vm.resultsRenderedByGroup=null,vm.maxResultCount=100,vm.selectedIndex=0,vm.includeGroups=!1,vm.filters={keywords:""},vm.$onDestroy=$onDestroy,vm.$onInit=$onInit,vm.applyKeywords=applyKeywords,vm.clearKeywords=clearKeywords}app.controller("invM17SearchView.ViewController",ViewController)}(angular,InVision);;
//!file:modal-view/search-view/search-view.directive.js
!function(ng,app){"use strict";function SearchViewDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-19c961"),controller:"invM17SearchView.ViewController",controllerAs:"vm",restrict:"E",scope:!0,template:'\n<h1 class="ids-h1 title">\n	Search Screens\n</h1>\n\n<form class="ids-form-bar search-form">\n	<div class="ids-form-bar__entry keywords-entry">\n		<label for="form--keywords-input" class="ids-form-bar__label">\n			Keywords:\n		</label>\n		<div class="ids-form-bar__body">\n			<input\n				id="form--keywords-input"\n				type="text"\n				placeholder="Search..."\n				ng-model="vm.filters.keywords"\n				ng-model-options="{ debounce: 200 }"\n				ng-change="vm.applyKeywords()"\n				inv-autofocus\n				class="ids-input keywords-input"\n			/>\n		</div>\n	</div>\n	<div class="ids-form-bar__buttons">\n		<button\n			type="button"\n			ng-click="vm.clearKeywords()"\n			class="ids-primary-button ids-primary-button--inline">\n			Clear\n		</button>\n	</div>\n</form>\n\n<div class="instructions">\n	<span class="instructions__item">\n		<strong>Arrow Up / Down</strong> to navigate.\n	</span>\n	<span class="instructions__item">\n		<strong>Enter</strong> to open.\n	</span>\n	<span class="instructions__item">\n		<strong>Esc</strong> to close.\n	</span>\n</div>\n\n<ol class="groups">\n	<li\n		ng-repeat="group in vm.resultsRenderedByGroup track by group.id"\n		class="groups__item">\n\n		<div\n			ng-if="::( vm.includeGroups && group.id )"\n			class="groups__title ids-break-word">\n			{{ :: group.name }}\n		</div>\n\n		<ol class="groups__screens screens">\n			<li\n				ng-repeat="result in group.results track by result.screen.id"\n				class="screens__item">\n				<a\n					ng-href="#{{ :: result.href }}"\n					class="screens__link ids-break-word"\n					ng-class="{\n							\'screens__link--selected\': ( result.indexForSelection === vm.selectedIndex )\n						}">\n					{{ :: result.screen.name }}\n				</a>\n			</li>\n		</ol>\n\n	</li>\n</ol>\n\n<p\n	ng-if="( vm.resultsRendered.length !== vm.resultsFiltered.length )"\n	class="ids-text overflow-message">\n	Only showing top {{ vm.maxResultCount }} matches. Use keyword search above.\n</p>\n'}}app.directive("invM17SearchView",SearchViewDirective)}(angular,InVision);;
//!file:overview-view/overview-view.controller.js
!function(ng,app){"use strict";function ViewController($element,$scope,_,appConfig,db,formatDate,formatNumber,viewScroller,windowTitle){function $onDestroy(){}function $onInit(){loadRemoteData(),viewScroller.scrollAll($element)}function loadRemoteData(){vm.prototype=db.prototype,vm.device=db.device,vm.company=db.company,setManagedBy(),setExportedBy(),setDateIndex(),setStats(),setTags(),setWindowTitle()}function setDateIndex(){vm.dateIndex=Object.create(null),vm.dateIndex[vm.prototype.createdAt]=formatDate(vm.prototype.createdAt),vm.dateIndex[vm.prototype.exportedAt]=formatDate(vm.prototype.exportedAt)}function setExportedBy(){vm.exportedBy=db.usersByID[appConfig.authenticatedUserID]}function setManagedBy(){vm.managedBy=db.usersByID[vm.prototype.userID]}function setStats(){vm.stats=Object.create(null),vm.stats.peopleCount=1===db.memberships.length?formatNumber(db.memberships.length)+" member":formatNumber(db.memberships.length)+" members",vm.stats.screenCount=1===db.screens.length?formatNumber(db.screens.length)+" screen":formatNumber(db.screens.length)+" screens",vm.stats.conversationCount=1===db.conversations.length?formatNumber(db.conversations.length)+" conversation":formatNumber(db.conversations.length)+" conversations",db.hotspots.length&&(vm.stats.screenCount+=1===db.hotspots.length?" with "+formatNumber(db.hotspots.length)+" hotspot":" with "+formatNumber(db.hotspots.length)+" hotspots"),db.comments.length&&(vm.stats.conversationCount+=1===db.comments.length?" with "+formatNumber(db.comments.length)+" comment":" with "+formatNumber(db.comments.length)+" comments");var statusIndex=_.groupBy(db.screens,"workflowStatusID");vm.stats.screenStatuses=db.screenStatuses.map(function(status){var screenCount=statusIndex[status.id]?statusIndex[status.id].length:0;return{id:status.id,name:status.name,screenCount:formatNumber(screenCount),screenCountRaw:screenCount}}).filter(function(status){return status.screenCountRaw});var conversationStatuses=[{id:"open",name:"Open",isComplete:!1},{id:"closed",name:"Closed",isComplete:!0}];vm.stats.conversationStatuses=conversationStatuses.map(function(status){var conversationCount=_.countWithProperty(db.conversations,"isComplete",status.isComplete);return{id:status.id,name:status.name,conversationCount:formatNumber(conversationCount),conversationCountRaw:conversationCount}}).filter(function(status){return status.conversationCountRaw})}function setTags(){vm.tags=appConfig.tags}function setWindowTitle(){windowTitle.set("Overview")}var vm=this;vm.prototype=null,vm.device=null,vm.company=null,vm.managedBy=null,vm.exportedBy=null,vm.dateIndex=null,vm.stats=null,vm.tags=null,vm.showSuggestions=window.location.origin.endsWith(".invisionapp.com"),vm.$onDestroy=$onDestroy,vm.$onInit=$onInit}app.controller("invM2OverviewView.ViewController",ViewController)}(angular,InVision);;
//!file:overview-view/overview-view.directive.js
!function(ng,app){"use strict";function OverviewViewDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-cc1e46"),controller:"invM2OverviewView.ViewController",controllerAs:"vm",restrict:"E",scope:!0,template:'\n<div class="ids-content-pane">\n\n	<p ng-if="vm.showSuggestions" class="ids-text suggestions">\n		Have <strong>suggestions</strong> or <strong>feedback</strong> about the content in this export\n		&mdash;\n		please contact me at <strong><a href="mailto:ben@invisionapp.com" class="ids-link">ben@invisionapp.com</a></strong>.\n	</p>\n\n	<h1 class="ids-h1">\n		{{ :: vm.prototype.name }}\n	</h1>\n\n	<ul>\n		<li ng-if="vm.company.id">\n			<p class="ids-text export-item">\n				<strong>Enterprise:</strong>\n				{{ :: vm.company.name }}\n			</p>\n		</li>\n		<li>\n			<p class="ids-text export-item">\n				<strong>Managed by:</strong>\n				{{ :: vm.managedBy.name }} &lt;{{ :: vm.managedBy.email }}&gt;\n			</p>\n		</li>\n		<li>\n			<p class="ids-text export-item">\n				<strong>Device:</strong>\n				{{ :: vm.device.name }}\n			</p>\n		</li>\n		<li>\n			<p class="ids-text export-item">\n				<strong>Created:</strong>\n				{{ :: vm.dateIndex[ vm.prototype.createdAt ] }}\n			</p>\n		</li>\n	</ul>\n\n	<ul>\n		<li>\n			<p class="ids-text export-item">\n				<strong>Exported by:</strong>\n				{{ :: vm.exportedBy.name }} &lt;{{ :: vm.exportedBy.email }}&gt;\n			</p>\n		</li>\n		<li>\n			<p class="ids-text export-item">\n				<strong>Exported:</strong>\n				{{ :: vm.dateIndex[ vm.prototype.exportedAt ] }}\n			</p>\n		</li>\n	</ul>\n\n	<h2 class="ids-h2">\n		What\'s in this export?\n	</h2>\n\n	<ul>\n		<li>\n			<p class="ids-text export-item">\n				<a href="#/people">{{ :: vm.stats.peopleCount }}</a> &rarr;\n			</p>\n		</li>\n		<li>\n			<p class="ids-text export-item">\n				<a href="#/screens">{{ :: vm.stats.screenCount }}</a> &rarr;\n			</p>\n\n			<ul ng-if=":: vm.stats.screenStatuses.length" class="sub-items">\n				<li ng-repeat="status in :: vm.stats.screenStatuses track by status.id">\n					<p class="ids-text export-item">\n						<a ng-href="#/screens?statusID={{ :: status.id }}">{{ :: status.name }}</a>\n						( {{ :: status.screenCount }} )\n					</p>\n				</li>\n			</ul>\n		</li>\n		<li>\n			<p class="ids-text export-item">\n				<a href="#/comments">{{ :: vm.stats.conversationCount }}</a> &rarr;\n			</p>\n\n			<ul ng-if=":: vm.stats.conversationStatuses.length" class="sub-items">\n				<li ng-repeat="status in :: vm.stats.conversationStatuses track by status.id">\n					<p class="ids-text export-item">\n						<a ng-href="#/comments?status={{ :: status.id }}">{{ :: status.name }}</a>\n						( {{ :: status.conversationCount }} )\n					</p>\n				</li>\n			</ul>\n		</li>\n	</ul>\n\n	<section ng-if="vm.tags.length">\n\n		<h2 class="ids-h2">\n			Tags\n		</h2>\n\n		<ul class="tags">\n			<li ng-repeat="tag in :: vm.tags track by tag.id" class="tags__item">\n				<span\n					class="tag"\n					ng-style=":: { \'border-color\': ( \'#\' + tag.color ) }">\n					{{ :: tag.name }}\n				</span>\n			</li>\n		</ul>\n\n	</section>\n\n</div>\n'}}app.directive("invM2OverviewView",OverviewViewDirective)}(angular,InVision);;
//!file:people-view/people-view.controller.js
!function(ng,app){"use strict";function ViewController($element,$location,$scope,_,db,formatDate,formatNumber,requestContext,searchService,viewScroller,windowTitle){function $onDestroy(){}function $onInit(){$scope.$on("requestContextChanged",handleRequestContextChanged);var urlFilters=getFiltersFromUrlWithSaneDefaults();vm.filters.keywords=urlFilters.keywords,vm.filters.roleID=urlFilters.roleID,vm.filters.participationID=urlFilters.participationID,loadRemoteData(),viewScroller.scrollAll($element)}function applyForm(){$location.search("keywords",vm.form.keywords||null),$location.search("roleID",vm.form.roleOption.id||null),$location.search("participationID",vm.form.participationOption.id||null)}function clearForm(){$location.search("keywords",null),$location.search("roleID",null),$location.search("participationID",null)}function getFiltersFromUrlWithSaneDefaults(){var search=$location.search();return{keywords:search.keywords||"",roleID:+search.roleID||0,participationID:+search.participationID||0}}function handleRequestContextChanged(){if(renderContext.isChangeRelevant()||!requestContext.hasActionChanged()){var urlFilters=getFiltersFromUrlWithSaneDefaults();(urlFilters.keywords!==vm.filters.keywords||urlFilters.roleID!==vm.filters.roleID||urlFilters.participationID!==vm.filters.participationID)&&(vm.filters.keywords=urlFilters.keywords,vm.filters.roleID=urlFilters.roleID,vm.filters.participationID=urlFilters.participationID,setFormFiltered(),setResultsFiltered())}}function loadRemoteData(){vm.prototype=db.prototype,setForm(),setFormFiltered(),setStats(),setResults(),setResultsFiltered(),setDateIndex(),setOverviewCount(),setWindowTitle()}function setDateIndex(){vm.dateIndex=Object.create(null),vm.results.forEach(function(result){vm.dateIndex[result.membership.startedAt]=formatDate(result.membership.startedAt),vm.dateIndex[result.membership.lastAccessedAt]=formatDate(result.membership.lastAccessedAt)})}function setForm(){vm.form.keywords="",vm.form.roleOptions=[{id:0,value:" - All Roles - "}],vm.form.roleOption=vm.form.roleOptions[0],db.roles.forEach(function(role){vm.form.roleOptions.push({id:role.id,value:role.name})}),vm.form.participationOptions=[{id:0,value:" - All Participants - "},{id:1,value:"Active participants"}],vm.form.participationOption=vm.form.participationOptions[0]}function setFormFiltered(){vm.form.keywords=vm.filters.keywords,vm.form.roleOption=_.findWithProperty(vm.form.roleOptions,"id",vm.filters.roleID),vm.form.participationOption=_.findWithProperty(vm.form.participationOptions,"id",vm.filters.participationID)}function setOverviewCount(){vm.overviewCount=1===vm.results.length?"was 1 member":"were "+formatNumber(vm.results.length)+" members"}function setResults(){vm.results=db.memberships.map(function(membership){var user=db.usersByID[membership.userID],sort=user.name.toLowerCase(),keywords=searchService.normalizeInputs([user.name,user.email]);return{sort:sort,keywords:keywords,user:user,membership:membership}}),vm.results=_.sortOnPropertyUsingNaturalOrder(vm.results,"sort")}function setResultsFiltered(){if(!vm.filters.keywords&&!vm.filters.roleID&&!vm.filters.participationID)return void(vm.filteredResults=vm.results);var normalizedKeywords=searchService.normalize(vm.filters.keywords);vm.filteredResults=vm.results.filter(function(result){return vm.filters.roleID&&vm.filters.roleID!==result.membership.role.id?!1:!vm.filters.participationID||vm.stats.screenCount[result.user.id]||vm.stats.commentCount[result.user.id]?normalizedKeywords&&!_.includes(result.keywords,normalizedKeywords)?!1:!0:!1})}function setStats(){vm.stats={screenCount:Object.create(null),commentCount:Object.create(null)},db.memberships.forEach(function(membership){var userID=membership.userID;vm.stats.screenCount[userID]=db.screensByUserID[userID]?formatNumber(db.screensByUserID[userID].length):0,vm.stats.commentCount[userID]=db.commentsByUserID[userID]?formatNumber(db.commentsByUserID[userID].length):0})}function setWindowTitle(){windowTitle.set("People")}var vm=this,renderContext=requestContext.getRenderContext("people");vm.prototype=null,vm.results=null,vm.filteredResults=null,vm.overviewCount=null,vm.dateIndex=null,vm.stats=null,vm.filters={keywords:"",roleID:0,participationID:0},vm.form={keywords:"",roleOption:null,roleOptions:[],participationOption:null,participationOptions:[]},vm.$onDestroy=$onDestroy,vm.$onInit=$onInit,vm.applyForm=applyForm,vm.clearForm=clearForm}app.controller("invM3PeopleView.ViewController",ViewController)}(angular,InVision);;
//!file:people-view/people-view.directive.js
!function(ng,app){"use strict";function PeopleViewDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-398e77"),controller:"invM3PeopleView.ViewController",controllerAs:"vm",restrict:"E",scope:!0,template:'\n<div class="ids-content-pane">\n\n	<h1 class="ids-h1">\n		People\n	</h1>\n\n	<p class="ids-text">\n		At the time of the export, there {{ :: vm.overviewCount }} in {{ :: vm.prototype.name }}.\n	</p>\n\n	<form ng-sumbit="vm.applyForm()" class="ids-form-bar">\n		<div class="ids-form-bar__entry">\n			<label for="form--keywords" class="ids-form-bar__label">\n				Search:\n			</label>\n			<div class="ids-form-bar__body">\n				<input\n					id="form--keywords"\n					type="text"\n					ng-model="vm.form.keywords"\n					ng-model-options="{ debounce: 300 }"\n					ng-change="vm.applyForm()"\n					class="ids-input keywords-input"\n				/>\n			</div>\n		</div>\n		<div class="ids-form-bar__entry">\n			<label for="form--role" class="ids-form-bar__label">\n				Role:\n			</label>\n			<div class="ids-form-bar__body">\n				<ids-select\n					control-id="form--role"\n					ng-model="vm.form.roleOption"\n					options="vm.form.roleOptions"\n					option-label="value"\n					ng-change="vm.applyForm()"\n					class="role-input">\n				</ids-select>\n			</div>\n		</div>\n		<div class="ids-form-bar__entry">\n			<label for="form--participation" class="ids-form-bar__label">\n				Participation:\n			</label>\n			<div class="ids-form-bar__body">\n				<ids-select\n					control-id="form--participation"\n					ng-model="vm.form.participationOption"\n					options="vm.form.participationOptions"\n					option-label="value"\n					ng-change="vm.applyForm()"\n					class="participation-input">\n				</ids-select>\n			</div>\n		</div>\n		<div\n			ng-if="( vm.filters.keywords || vm.filters.roleID || vm.filters.participationID )"\n			class="ids-form-bar__buttons">\n			<button\n				type="button"\n				ng-click="vm.clearForm()"\n				class="ids-primary-button ids-primary-button--inline">\n				Clear\n			</button>\n		</div>\n	</form>\n\n	<table ng-if="vm.filteredResults.length" class="ids-table">\n	<thead>\n		<tr>\n			<th class="ids-table__th">\n				Name\n			</th>\n			<th class="ids-table__th">\n				Email\n			</th>\n			<th class="ids-table__th">\n				Role\n			</th>\n			<th class="ids-table__th">\n				Joined\n			</th>\n			<th class="ids-table__th" style="width: 1% ;">\n				Screens\n			</th>\n			<th class="ids-table__th" style="width: 1% ;">\n				Comments\n			</th>\n		</tr>\n	</thead>\n	<tbody>\n		<tr ng-repeat="result in vm.filteredResults track by result.membership.id">\n			<td class="ids-table__td">\n				{{ :: result.user.name }}\n			</td>\n			<td class="ids-table__td">\n				{{ :: result.user.email }}\n			</td>\n			<td class="ids-table__td">\n				{{ :: result.membership.role.name }}\n			</td>\n			<td class="ids-table__td ids-table__td--nowrap">\n				<span title="Last accessed: {{ :: vm.dateIndex[ result.membership.lastAccessedAt ] }}">{{ :: vm.dateIndex[ result.membership.startedAt ] }}</span>\n			</td>\n			<td\n				class="ids-table__td ids-table__td--no-padding ids-table__td--center"\n				ng-switch=":: ( !! vm.stats.screenCount[ result.user.id ] )">\n				<a\n					ng-switch-when="true"\n					ng-href="#/screens?userID={{ :: result.user.id }}"\n					class="ids-table__block">\n					{{ :: vm.stats.screenCount[ result.user.id ] }}\n				</a>\n				<span ng-switch-when="false" class="ids-table__block no-count">\n					&mdash;\n				</span>\n			</td>\n			<td\n				class="ids-table__td ids-table__td--no-padding ids-table__td--center"\n				ng-switch=":: ( !! vm.stats.commentCount[ result.user.id ] )">\n				<a\n					ng-switch-when="true"\n					ng-href="#/comments?userID={{ :: result.user.id }}"\n					class="ids-table__block">\n					{{ :: vm.stats.commentCount[ result.user.id ] }}\n				</a>\n				<span ng-switch-when="false" class="ids-table__block no-count">\n					&mdash;\n				</span>\n			</td>\n		</tr>\n	</tbody>\n	</table>\n\n\n	<ids-not-found ng-if="( ! vm.filteredResults.length )">\n		<h2 class="ids-h2">\n			No matches\n		</h2>\n		<p class="ids-p">\n			<a href="#/people">Clear filters</a>.\n		</p>\n	</ids-not-found>\n\n</div>\n'}}app.directive("invM3PeopleView",PeopleViewDirective)}(angular,InVision);;
//!file:redirect-view/redirect-view.controller.js
!function(ng,app){"use strict";function ViewController($element,$location,_,viewScroller,windowTitle){function $onInit(){return vm.externalUrl=$location.search().externalUrl||"",vm.sourceUrl=$location.search().sourceUrl||"",-1===vm.externalUrl.search(/^https?:\/\//i)||"/"!=vm.sourceUrl[0]?($location.replace(),void $location.url("/")):(setWindowTitle(),void viewScroller.scrollAll($element))}function returnToSource(){$location.url(vm.sourceUrl||"/")}function setWindowTitle(){windowTitle.set("Redirect")}var vm=this;vm.externalUrl=null,vm.sourceUrl=null,vm.$onInit=$onInit,vm.returnToSource=returnToSource}app.controller("invM12RedirectView.ViewController",ViewController)}(angular,InVision);;
//!file:redirect-view/redirect-view.directive.js
!function(ng,app){"use strict";function RedirectViewDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-4e52d1"),controller:"invM12RedirectView.ViewController",controllerAs:"vm",restrict:"E",scope:!0,template:'\n<div class="ids-content-pane">\n\n	<h1 class="ids-h1">\n		Redirect to an External URL\n	</h1>\n\n	<p class="ids-text">\n		You clicked on a link that wants to take you to an <strong>external site</strong>. Are you sure you want to proceed to the following URL?\n	</p>\n\n	<p class="ids-text">\n		<strong>Yes:</strong>\n		<a ng-href="{{ vm.externalUrl }}" ng-click="vm.returnToSource()" target="_blank" class="link">{{ vm.externalUrl }}</a>\n	</p>\n\n	<p class="ids-text">\n		<strong>No:</strong>\n		<a ng-href="#{{ vm.sourceUrl }}">Back to Prototype</a> &rarr;\n	</p>\n\n</div>\n'}}app.directive("invM12RedirectView",RedirectViewDirective)}(angular,InVision);;
//!file:screens-view/browse-view/browse-view.controller.js
!function(ng,app){"use strict";function ViewController($element,$scope,appConfig,db,formatNumber,viewScroller,windowTitle){function $onDestroy(){}function $onInit(){loadRemoteData(),viewScroller.scrollAll($element)}function scrollToGroup(event,groupIndex){event.preventDefault();var allGroups=$element.find("[c-f3256e].group");viewScroller.scrollIntoView(allGroups[groupIndex],"instant","start")}function loadRemoteData(){vm.prototype=db.prototype,setResults(),setIncludeGroups(),setGroups(),setOverviewCount(),setWindowTitle()}function setGroups(){vm.includeGroups&&(vm.results.length<2||(vm.groups=vm.results.map(function(result){return result.divider.name||"Unnamed Group"})))}function setIncludeGroups(){vm.includeGroups=vm.prototype.sortTypeID===sortTypes.manual}function setOverviewCount(){vm.overviewCount=1===db.screens.length?"was 1 screen":"were "+formatNumber(db.screens.length)+" screens"}function setResults(){var noDivider={id:0,name:""},resultsIndex=Object.create(null);vm.results=[],db.screens.forEach(function(screen){var divider=db.dividersByID[screen.screenGroupID]||noDivider;resultsIndex[divider.id]||(resultsIndex[divider.id]={divider:divider,screens:[]},vm.results.push(resultsIndex[divider.id])),resultsIndex[divider.id].screens.push(screen)})}function setWindowTitle(){windowTitle.set("Screens (browse)")}var vm=this,sortTypes=appConfig.prototypeSettings.sortTypes;vm.prototype=null,vm.results=null,vm.includeGroups=!1,vm.groups=null,vm.overviewCount=null,vm.$onDestroy=$onDestroy,vm.$onInit=$onInit,vm.scrollToGroup=scrollToGroup}app.controller("invM14BrowseView.ViewController",ViewController)}(angular,InVision);;
//!file:screens-view/browse-view/browse-view.directive.js
!function(ng,app){"use strict";function BrowseViewDirective(db,fakeCssModuleCompiler){function link(scope,element,attributes){function addImages(node){var screenID=node.getAttribute("href").split("/").pop(),screen=db.screensByID[screenID];node.style.backgroundColor="#"+screen.backgroundColor,node.style.backgroundImage="url( "+screen.imageUrl+" )"}function handleIntersection(entries){entries.forEach(function(entry){entry.isIntersecting?addImages(entry.target):removeImages(entry.target)})}function removeImages(node){node.style.backgroundColor=null,node.style.backgroundImage=null}function setupObserver(){element.find(".screens__link").each(function(i,node){observer.observe(node)})}var observer=new IntersectionObserver(handleIntersection,{}),setupTimer=setTimeout(setupObserver,500);scope.$on("$destroy",function(){clearTimeout(setupTimer),observer.disconnect(),observer=null})}return{compile:fakeCssModuleCompiler("c-f3256e",link),controller:"invM14BrowseView.ViewController",controllerAs:"vm",restrict:"E",scope:!0,template:'<!--\n	My goal here is keep this page as LIGHT WEIGHT as possible. Some users have thousands\n	of screens to render. Which means, we\'re both dealing with a huge volume as well as\n	with the fact that we\'re scaling-down images on-the-fly. Both of these are performance\n	hurdles. I\'m using intersection observer in the directive\'s link() function to manage\n	the background rendering.\n-->\n<div class="ids-content-pane">\n\n	<h1 class="ids-h1">\n		Screens\n	</h1>\n\n	<p class="ids-text">\n		At the time of the export, there {{ :: vm.overviewCount }} in {{ :: vm.prototype.name }}.\n	</p>\n\n	<inv-m15-screen-pills active-pill="browse"></inv-m15-screen-pills>\n\n	<section ng-if="vm.groups" class="section-list">\n		<h2 class="ids-h2 section-list__title">\n			All Sections\n		</h2>\n		<ol class="section-list__list">\n			<li\n				ng-repeat="groupName in :: vm.groups track by $index"\n				class="ids-text section-list__item">\n\n				<a\n					ng-click="vm.scrollToGroup( $event, $index )"\n					class="section-list__link">\n					{{ :: groupName }}\n				</a>\n			</li>\n		</ol>\n	</section>\n\n	<section ng-repeat="result in :: vm.results track by $index" class="group">\n		<h2\n			ng-if=":: ( vm.includeGroups && result.divider.name )"\n			class="ids-h2 group__name">\n			{{ :: result.divider.name }}\n		</h2>\n		<div class="group__screens screens">\n			<a\n				ng-repeat="screen in :: result.screens track by screen.id"\n				ng-href="#/screens/{{ :: screen.id }}"\n				class="screens__link">\n				<span class="screens__name">{{ :: screen.name }}</span>\n			</a>\n		</div>\n	</section>\n\n</div>\n'}}app.directive("invM14BrowseView",BrowseViewDirective)}(angular,InVision);;
//!file:screens-view/detail-view/aside-view.controller.js
!function(ng,app){"use strict";function ViewController($element,$location,$scope,appConfig,db,formatDate,formatNumber,requestContext,viewScroller){function $onDestroy(){}function $onInit(){$scope.$on("requestContextChanged",handleRequestContextChanged),vm.screenID=requestContext.getParamAsInt("screenID"),loadRemoteData(),scrollMainPanel()}function handleHotspotMouseenter(hotspot){props.onHotspotEnter({hotspotID:hotspot.id})}function handleHotspotMouseleave(hotspot){props.onHotspotLeave({hotspotID:hotspot.id})}function openSearch(){$location.search("modal","search")}function getDomainFromUrl(url){var matches=url.match(/^https?:..(www\.)?([^\\\/]+)/i);return matches?matches[2]:""}function handleRequestContextChanged(){renderContext.isChangeRelevant()&&requestContext.hasParamChanged("screenID")&&(vm.screenID=requestContext.getParamAsInt("screenID"),loadRemoteData(),scrollMainPanel())}function loadRemoteData(){vm.screen=db.screensByID[vm.screenID],vm.screen&&(setUser(),setStatus(),setHotspots(),setDateIndex(),setLabelIndex(),setCommentCount())}function scrollMainPanel(){viewScroller.scroll($element.find(".main-panel"))}function setCommentCount(){vm.commentCount=db.conversationsByScreenID[vm.screen.id]?formatNumber(db.conversationsByScreenID[vm.screen.id].length):null}function setDateIndex(){vm.dateIndex=Object.create(null),vm.dateIndex[vm.screen.updatedAt]=formatDate(vm.screen.updatedAt)}function setHotspots(){vm.hotspots=db.hotspotsByScreenID[vm.screen.id]||[]}function setLabelIndex(){var targetTypes=appConfig.hotspotSettings.targetTypes,eventTypes=appConfig.hotspotSettings.eventTypes;vm.labelIndex=Object.create(null),vm.hotspots.forEach(function(hotspot){var setting={name:"",event:"",target:""};switch(hotspot.targetScreenID?setting.name=db.screensByID[hotspot.targetScreenID].name:hotspot.metadata.url&&(setting.name=getDomainFromUrl(hotspot.metadata.url)),hotspot.eventTypeID){case eventTypes.autoRedirect:setting.event="Redirect ("+formatNumber(hotspot.metadata.redirectAfter)+"ms)";break;case eventTypes.click:setting.event="Click";break;case eventTypes.doubleTap:setting.event="Double-tap";break;case eventTypes.hover:setting.event="Hover";break;case eventTypes.pressHold:setting.event="Press-hold";break;case eventTypes.swipeDown:setting.event="Swipe-down";break;case eventTypes.swipeLeft:setting.event="Swipe-left";break;case eventTypes.swipeRight:setting.event="Swipe-right";break;case eventTypes.swipeUp:setting.event="Swipe-up"}switch(hotspot.targetTypeID){case targetTypes.screen:setting.target=hotspot.targetScreenID===vm.screen.id?"Screen ( Self )":"Screen";break;case targetTypes.lastScreenVisited:setting.target="Back in History";break;case targetTypes.previousScreenInSort:setting.target="Previous Screen";break;case targetTypes.nextScreenInSort:setting.target="Next Screen";break;case targetTypes.externalUrl:setting.target="External Site";break;case targetTypes.positionOnScreen:setting.target="Position on Screen";break;case targetTypes.screenOverlay:setting.target="Overlay"}vm.labelIndex[hotspot.id]=setting})}function setStatus(){vm.status=db.screenStatusesByID[vm.screen.workflowStatusID]}function setUser(){vm.user=db.usersByID[vm.screen.userID]}var vm=this,props=$scope.props=$scope,renderContext=requestContext.getRenderContext("screens.detail",["screenID"]);vm.screenID=0,vm.screen=null,vm.user=null,vm.status=null,vm.hotspots=null,vm.dateIndex=null,vm.labelIndex=null,vm.commentCount=null,vm.$onDestroy=$onDestroy,vm.$onInit=$onInit,vm.handleHotspotMouseenter=handleHotspotMouseenter,vm.handleHotspotMouseleave=handleHotspotMouseleave,vm.openSearch=openSearch}app.controller("invM11AsideView.ViewController",ViewController)}(angular,InVision);;
//!file:screens-view/detail-view/aside-view.directive.js
!function(ng,app){"use strict";function AsideViewDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-f4f846"),controller:"invM11AsideView.ViewController",controllerAs:"vm",restrict:"E",scope:{screenHistory:"=",hotspotModes:"=",hotspotMode:"=",onGotoNextScreen:"&",onGotoPrevScreen:"&",onHide:"&",onCycleHotspotMode:"&",onHotspotEnter:"&",onHotspotLeave:"&"},template:'\n<div class="main-panel">\n	<div class="ids-content-pane">\n\n		<h1 class="ids-h1 ids-break-word">\n			{{ vm.screen.name }}\n		</h1>\n\n		<p class="metadata ids-break-word">\n			<strong class="metadata__label">Managed by:</strong>\n			<span class="metadata__value">{{ vm.user.email }}</span>\n		</p>\n\n		<p class="metadata">\n			<strong class="metadata__label">Updated:</strong>\n			<span class="metadata__value">{{ vm.dateIndex[ vm.screen.updatedAt ] }}</span>\n		</p>\n\n		<p ng-if="vm.status" class="metadata">\n			<strong class="metadata__label">Workflow:</strong>\n			<span class="metadata__value">{{ vm.status.name }}</span>\n		</p>\n\n		<p class="metadata">\n			<strong class="metadata__label">Version:</strong>\n			<span class="metadata__value">{{ vm.screen.imageVersion }}</span>\n		</p>\n\n		<p ng-if="vm.commentCount" class="metadata">\n			<strong class="metadata__label">Comments:</strong>\n			<span class="metadata__value"><a ng-href="#/comments/{{ vm.screen.id }}">{{ vm.commentCount }}</a></span>\n		</p>\n\n		<section ng-if="vm.hotspots.length">\n\n			<h2 class="ids-h2">\n				Linked screens\n			</h2>\n\n			<ul class="hotspots">\n				<li\n					ng-repeat="hotspot in vm.hotspots track by hotspot.id"\n					class="hotspots__item">\n\n					<a\n						inv-hotspot-href="hotspot"\n						screen-history="props.screenHistory"\n						ng-mouseenter="vm.handleHotspotMouseenter( hotspot )"\n						ng-mouseleave="vm.handleHotspotMouseleave( hotspot )"\n						class="hotspot-card">\n\n						<span class="hotspot-card__name ids-break-word">\n							{{ :: vm.labelIndex[ hotspot.id ].name }}\n						</span>\n						<span class="hotspot-card__metadata">\n							{{ :: vm.labelIndex[ hotspot.id ].event }} &rarr;\n							{{ :: vm.labelIndex[ hotspot.id ].target }}\n						</span>\n					</a>\n\n				</li>\n			</ul>\n\n		</section>\n\n	</div>\n\n	<button\n		ng-click="props.onHide()"\n		class="ids-primary-button ids-primary-button--plain close">\n		<svg class="close__icon">\n			<title>Hide details</title>\n			<use xlink:href="#svg-sprite-close"></use>\n		</svg>\n	</button>\n\n</div>\n\n<div class="tools-panel tools">\n\n	<button\n		ng-click="props.onCycleHotspotMode()"\n		class="toggle-hints tool tool--toggle">\n		<ids-tri-switch\n			states="props.hotspotModes"\n			state="props.hotspotMode"\n			class="toggle-hints__switch">\n		</ids-tri-switch>\n		<span class="toggle-hints__label">\n			Hotspot hints\n		</span>\n	</button>\n	<button\n		ng-click="props.onGotoPrevScreen()"\n		class="ids-primary-button ids-primary-button--stroked tool tool--prev">\n		Prev\n	</button>\n	<button\n		ng-click="vm.openSearch()"\n		class="ids-primary-button ids-primary-button--stroked tool tool--search">\n		<svg aria-hidden="true" class="tool__icon">\n			<use xlink:href="#svg-sprite-search"></use>\n		</svg>\n	</button>\n	<button\n		ng-click="props.onGotoNextScreen()"\n		class="ids-primary-button ids-primary-button--stroked tool tool--next">\n		Next\n	</button>\n\n</div>\n'}}app.directive("invM11AsideView",AsideViewDirective)}(angular,InVision);;
//!file:screens-view/detail-view/composite.directive.js
!function(ng,app){"use strict";function CompositeDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-6ba5fb"),restrict:"E",scope:!1,template:'\n<!--\n	Note: Since the hotpots are layered OVER the screen, we know that any click received\n	directly by the screen image must be a miss of any rendered hotspot.\n-->\n<img\n	ng-if="vm.screen.imageUrl"\n	ng-src="{{ vm.screen.imageUrl }}"\n	ng-click="vm.handleHotspotMiss()"\n	class="screen"\n	ng-style="vm.layoutStyles.screen"\n/>\n\n<a\n	ng-repeat="hotspot in vm.hotspots track by hotspot.id"\n	data-hotspot-id="{{ :: hotspot.id }}"\n	inv-hotspot-href="hotspot"\n	screen-history="vm.screenHistory"\n	ng-click="vm.applyHotspotBehavior( $event, hotspot )"\n	title="Link to: {{ :: vm.screenIndex[ hotspot.targetScreenID ].name }}"\n	class="hotspot"\n	ng-class="{\n		\'hotspot--explicit\': vm.isShowingHotspots,\n		\'hotspot--flashing\': vm.isFlashingHotspots,\n		\'hotspot--spotlight\': ( vm.spotlightID === hotspot.id )\n	}"\n	ng-style=":: vm.layoutStyles.hotspots[ hotspot.id ]">\n</a>\n\n<button\n	ng-if="vm.hasAutoCloseHotspot"\n	ng-click="vm.closeOverlay()"\n	class="auto-close">\n</button>\n'}}app.directive("invM7Composite",CompositeDirective)}(angular,InVision);;
//!file:screens-view/detail-view/detail-view.controller.js
!function(ng,app){"use strict";function ViewController($element,$location,$scope,$timeout,_,appConfig,db,keyCommandsPriority,keyCommandsService,requestContext,viewScroller,windowTitle){function $onDestroy(){unlistenToKeyCommands&&unlistenToKeyCommands(),screenHistoryRemove(),hideSpotlight(),hideFlash()}function $onInit(){unlistenToKeyCommands=keyCommandsService.listen({ArrowLeft:handleKeyArrowLeft,ArrowRight:handleKeyArrowRight,Escape:handleKeyEscape},{priority:keyCommandsPriority.MAIN}),$scope.$on("requestContextChanged",handleRequestContextChanged),vm.screenID=requestContext.getParamAsInt("screenID"),vm.contextScreenID=+$location.search().contextScreenID||0,vm.contextHotspotID=$location.search().contextHotspotID||"",setPrevNextIndex(),loadRemoteData(),scrollMainPanel()}function applyHotspotBehavior(event,hotspot){if(!(event.altKey||event.ctrlKey||event.metaKey||event.shiftKey)){var anchor=event.currentTarget,currentHref=window.location.href,targetHref=anchor.href,isLinkingToSelf=currentHref===targetHref,scrollOffset=getCurrentScrollOffset();switch(hotspot.targetTypeID){case targetTypes.screen:case targetTypes.previousScreenInSort:case targetTypes.nextScreenInSort:isLinkingToSelf&&!hotspot.isScrollTo?scrollMainPanel():!isLinkingToSelf&&hotspot.isScrollTo&&(vm.nextScrollOffset=scrollOffset);break;case targetTypes.lastScreenVisited:(vm.contextScreen||hotspot.isScrollTo)&&(vm.nextScrollOffset=scrollOffset);break;case targetTypes.positionOnScreen:isLinkingToSelf&&scrollMainPanel();break;case targetTypes.externalUrl:break;case targetTypes.screenOverlay:vm.nextScrollOffset=scrollOffset}}}function closeOverlay(){$location.url("/screens/"+vm.contextScreen.id+"?pop=true&screenHistory="+vm.screenHistory),vm.nextScrollOffset=getCurrentScrollOffset()}function cycleHotspotMode(){var modeIndex=vm.hotspotModes.indexOf(vm.hotspotMode);switch(vm.hotspotMode=HOTSPOT_MODE=modeIndex>0?vm.hotspotModes[modeIndex-1]:_.last(vm.hotspotModes),vm.hotspotMode){case HOTSPOT_MODES.OFF:vm.isShowingHotspots=!1,hideFlash();break;case HOTSPOT_MODES.FLASHING:vm.isShowingHotspots=!1,showFlash();break;case HOTSPOT_MODES.ON:vm.isShowingHotspots=!0,hideFlash()}}function handleHotspotMiss(event){vm.hotspotMode===HOTSPOT_MODES.FLASHING&&(vm.isFlashingHotspots||showFlash())}function hideAside(){vm.isShowingAside=IS_SHOWING_ASIDE=!1}function hideFlash(){$timeout.cancel(vm.flashTimer),vm.isFlashingHotspots=!1}function hideSpotlight(){clearTimeout(vm.spotlightTimer),vm.spotlightID=null}function gotoNextScreen(){$location.url("/screens/"+vm.next.id+"?screenHistory="+vm.screenHistory)}function gotoPrevScreen(){$location.url("/screens/"+vm.prev.id+"?screenHistory="+vm.screenHistory)}function showAside(){vm.isShowingAside=IS_SHOWING_ASIDE=!0}function showFlash(){$timeout.cancel(vm.flashTimer),vm.flashTimer=$timeout(hideFlash,750),vm.isFlashingHotspots=!0}function showSpotlight(hotspotID){vm.spotlightID=hotspotID,clearTimeout(vm.spotlightTimer),vm.spotlightTimer=setTimeout(scrollToSpotlight,500)}function asPx(value){return value+"px"}function asTranslate3d(x,y){return"translate3D( "+asPx(x)+" , "+asPx(y)+" , 0 )"}function getCurrentScrollOffset(){var scroller=$element.find(".rendering-scroller");return{top:scroller.prop("scrollTop"),left:scroller.prop("scrollLeft")}}function handleKeyArrowLeft(event){event.preventDefault(),gotoPrevScreen()}function handleKeyArrowRight(event){event.preventDefault(),gotoNextScreen()}function handleKeyEscape(event){$location.url("/screens")}function handleRequestContextChanged(){(renderContext.isChangeRelevant()||!requestContext.hasActionChanged())&&(requestContext.hasParamChanged("screenID")&&(vm.screenID=requestContext.getParamAsInt("screenID"),vm.contextScreenID=+$location.search().contextScreenID||0,vm.contextHotspotID=$location.search().contextHotspotID||"",loadRemoteData(),hideSpotlight(),hideFlash()),scrollMainPanel())}function loadRemoteData(){return vm.screen=db.screensByID[vm.screenID],vm.screen?(vm.contextScreen=db.screensByID[vm.contextScreenID]||null,vm.contextScreenID&&!vm.contextScreen?($location.replace(),void $location.url("/screens")):(vm.contextHotspot=db.hotspotsByID[vm.contextHotspotID]||null,vm.contextHotspotID&&!vm.contextHotspot?($location.replace(),void $location.url("/screens")):Boolean(vm.contextScreen)!=Boolean(vm.contextHotspot)?($location.replace(),void $location.url("/screens")):(setHotspots(),setScreenIndex(),setPrevNext(),setWindowTitle(),setLayoutStyles(),setHasAutoCloseHotspot(),void screenHistoryApply()))):($location.replace(),void $location.url("/screens"))}function screenHistoryApply(){var historyElements=($location.search().screenHistory||"").split(",").map(function(element){return+element}).filter(function(element){return element}),isPop="true"===$location.search().pop,isReplace="true"===$location.search().replace;for(isPop?historyElements.shift():isReplace?historyElements[0]=vm.screen.id:historyElements.unshift(vm.screen.id),historyElements.length||historyElements.unshift(vm.screen.id);historyElements.length>10;)historyElements.pop();vm.screenHistory=historyElements.join(",");var previousScreenID=historyElements[1]||vm.screen.id;vm.hotspots.forEach(function(hotspot){hotspot.targetTypeID===targetTypes.lastScreenVisited&&(hotspot.targetScreenID=previousScreenID)})}function screenHistoryRemove(){db.hotspots.forEach(function(hotspot){hotspot.targetTypeID===targetTypes.lastScreenVisited&&(hotspot.targetScreenID=0)})}function scrollMainPanel(){if(vm.nextScrollOffset){var nextTop=vm.nextScrollOffset.top,nextLeft=vm.nextScrollOffset.left;return vm.nextScrollOffset=null,void $scope.$applyAsync(function(){$element.find(".rendering-scroller").scrollTop(nextTop).scrollLeft(nextLeft)})}var scroller=$element.find(".rendering-scroller"),search=$location.search(),scrollTo=search.scrollTo,scrollDuration="true"===search.smoothScroll?500:0;return void 0===scrollTo?void viewScroller.scrollAll(scroller):void $scope.$applyAsync(function(){scroller.animate({scrollTop:scrollTo},scrollDuration)})}function scrollToSpotlight(){viewScroller.scrollIntoView($element.find(".hotspot--spotlight"))}function setHasAutoCloseHotspot(){vm.hasAutoCloseHotspot=!1,vm.contextHotspot&&vm.contextHotspot.eventTypeID===eventTypes.hover&&!vm.contextHotspot.metadata.stayOnScreen&&(vm.hasAutoCloseHotspot=!0)}function setHotspots(){vm.hotspots=db.hotspotsByScreenID[vm.screen.id]||[]}function setLayoutStyles(){vm.contextScreen?vm.contextScale=vm.contextScreen.displayScale*vm.contextScreen.deviceScale/(vm.screen.displayScale*vm.screen.deviceScale):vm.contextScale=1,vm.contextScreen&&vm.contextHotspot.metadata.overlay.isFixedPosition?setLayoutStylesForFixedOverlayMode():vm.contextScreen?setLayoutStylesForInlineOverlayMode():setLayoutStylesForScreenMode()}function setLayoutStylesForFixedOverlayMode(){var metadata=vm.contextHotspot.metadata,overlay=metadata.overlay,offset=overlay.positionOffset;switch(vm.layoutStyles={renderMode:"fixedOverlay",scroller:setLayoutStylesForScroller(vm.contextScreen),contextScreen:null,contextBackdrop:null,screenProjector:null,composite:null,screen:null,hotspots:null},vm.layoutStyles.contextScreen={width:asPx(vm.contextScreen.width),height:asPx(vm.contextScreen.height)},vm.contextScreen.alignment){case"left":vm.layoutStyles.contextScreen.margin="0 auto 0 0";break;case"right":vm.layoutStyles.contextScreen.margin="0 0 0 auto";break;default:vm.layoutStyles.contextScreen.margin="0 auto"}switch(vm.layoutStyles.contextBackdrop={"background-color":"#"+vm.screen.backgroundColor,opacity:overlay.bgOpacity/100},overlay.closeOnOutsideClick||(vm.layoutStyles.contextBackdrop.cursor="default"),vm.layoutStyles.screenProjector={display:"flex",position:"absolute",top:asPx(0),left:asPx(0),right:asPx(0),bottom:asPx(0)},vm.layoutStyles.composite={width:asPx(vm.screen.width*vm.contextScale),height:asPx(vm.screen.height*vm.contextScale)},vm.layoutStyles.screen={width:asPx(vm.screen.width*vm.contextScale),height:asPx(vm.screen.height*vm.contextScale)},overlay.positionID){case positionTypes.custom:case positionTypes.topLeft:vm.layoutStyles.screenProjector["align-items"]="flex-start",vm.layoutStyles.screenProjector["justify-content"]="flex-start",vm.layoutStyles.composite.transform=asTranslate3d(offset.x,offset.y);break;case positionTypes.topCenter:vm.layoutStyles.screenProjector["align-items"]="flex-start",vm.layoutStyles.screenProjector["justify-content"]="center",vm.layoutStyles.composite.transform=asTranslate3d(offset.x,offset.y);break;case positionTypes.topRight:vm.layoutStyles.screenProjector["align-items"]="flex-start",vm.layoutStyles.screenProjector["justify-content"]="flex-end",vm.layoutStyles.composite.transform=asTranslate3d(-offset.x,offset.y);break;case positionTypes.bottomLeft:vm.layoutStyles.screenProjector["align-items"]="flex-end",vm.layoutStyles.screenProjector["justify-content"]="flex-start",vm.layoutStyles.composite.transform=asTranslate3d(offset.x,-offset.y);break;case positionTypes.bottomCenter:vm.layoutStyles.screenProjector["align-items"]="flex-end",vm.layoutStyles.screenProjector["justify-content"]="center",vm.layoutStyles.composite.transform=asTranslate3d(offset.x,-offset.y);break;case positionTypes.bottomRight:vm.layoutStyles.screenProjector["align-items"]="flex-end",vm.layoutStyles.screenProjector["justify-content"]="flex-end",vm.layoutStyles.composite.transform=asTranslate3d(-offset.x,-offset.y);break;case positionTypes.centered:vm.layoutStyles.screenProjector["align-items"]="center",vm.layoutStyles.screenProjector["justify-content"]="center"}vm.layoutStyles.hotspots=Object.create(null),vm.hotspots.forEach(function(hotspot){vm.layoutStyles.hotspots[hotspot.id]={left:asPx(hotspot.x*vm.contextScale),top:asPx(hotspot.y*vm.contextScale),width:asPx(hotspot.width*vm.contextScale),height:asPx(hotspot.height*vm.contextScale)}})}function setLayoutStylesForInlineOverlayMode(){var zoomScrollBehaviors=appConfig.screenSettings.zoomScrollBehaviors,metadata=vm.contextHotspot.metadata,overlay=metadata.overlay,offset=overlay.positionOffset;switch(vm.layoutStyles={renderMode:"inlineOverlay",scroller:setLayoutStylesForScroller(vm.contextScreen),contextScreen:null,contextBackdrop:null,screenProjector:null,composite:null,screen:null,hotspots:null},vm.layoutStyles.contextScreen={width:asPx(vm.contextScreen.width),height:asPx(vm.contextScreen.height)},vm.contextScreen.alignment){case"left":vm.layoutStyles.contextScreen.margin="0 auto 0 0";break;case"right":vm.layoutStyles.contextScreen.margin="0 0 0 auto";break;default:vm.layoutStyles.contextScreen.margin="0 auto"}switch(vm.layoutStyles.contextBackdrop={"background-color":"#"+vm.screen.backgroundColor,opacity:overlay.bgOpacity/100},overlay.closeOnOutsideClick||(vm.layoutStyles.contextBackdrop.cursor="default"),vm.layoutStyles.screenProjector={display:"flex",width:asPx(vm.contextScreen.width),height:asPx(vm.contextScreen.height),position:"absolute",top:asPx(0),left:asPx(0),right:asPx(0)},vm.layoutStyles.composite={width:asPx(vm.screen.width*vm.contextScale),height:asPx(vm.screen.height*vm.contextScale)},vm.layoutStyles.screen={width:asPx(vm.screen.width*vm.contextScale),height:asPx(vm.screen.height*vm.contextScale)},vm.contextScreen.alignment){case"left":vm.layoutStyles.screenProjector.margin="0 auto 0 0";break;case"right":vm.layoutStyles.screenProjector.margin="0 0 0 auto";break;default:vm.layoutStyles.screenProjector.margin="0 auto 0 auto"}switch(overlay.positionID){case positionTypes.custom:var offsetX=offset.x,offsetY=offset.y;vm.contextScreen.zoomScrollBehavior===zoomScrollBehaviors.shrinkToViewport&&(offsetX*=vm.contextScreen.displayScale*vm.contextScreen.deviceScale,offsetY*=vm.contextScreen.displayScale*vm.contextScreen.deviceScale),vm.layoutStyles.screenProjector["align-items"]="flex-start",vm.layoutStyles.screenProjector["justify-content"]="flex-start",vm.layoutStyles.composite.transform=asTranslate3d(offsetX,offsetY);break;case positionTypes.topLeft:vm.layoutStyles.screenProjector["align-items"]="flex-start",vm.layoutStyles.screenProjector["justify-content"]="flex-start",vm.layoutStyles.composite.transform=asTranslate3d(offset.x,offset.y);break;case positionTypes.topCenter:vm.layoutStyles.screenProjector["align-items"]="flex-start",vm.layoutStyles.screenProjector["justify-content"]="center",vm.layoutStyles.composite.transform=asTranslate3d(offset.x,offset.y);break;case positionTypes.topRight:vm.layoutStyles.screenProjector["align-items"]="flex-start",vm.layoutStyles.screenProjector["justify-content"]="flex-end",vm.layoutStyles.composite.transform=asTranslate3d(-offset.x,offset.y);break;case positionTypes.bottomLeft:vm.layoutStyles.screenProjector["align-items"]="flex-end",vm.layoutStyles.screenProjector["justify-content"]="flex-start",vm.layoutStyles.composite.transform=asTranslate3d(offset.x,-offset.y);break;case positionTypes.bottomCenter:vm.layoutStyles.screenProjector["align-items"]="flex-end",vm.layoutStyles.screenProjector["justify-content"]="center",vm.layoutStyles.composite.transform=asTranslate3d(offset.x,-offset.y);break;case positionTypes.bottomRight:vm.layoutStyles.screenProjector["align-items"]="flex-end",vm.layoutStyles.screenProjector["justify-content"]="flex-end",vm.layoutStyles.composite.transform=asTranslate3d(-offset.x,-offset.y);break;case positionTypes.centered:vm.layoutStyles.screenProjector["align-items"]="center",vm.layoutStyles.screenProjector["justify-content"]="center"}vm.layoutStyles.hotspots=Object.create(null),vm.hotspots.forEach(function(hotspot){vm.layoutStyles.hotspots[hotspot.id]={left:asPx(hotspot.x*vm.contextScale),top:asPx(hotspot.y*vm.contextScale),width:asPx(hotspot.width*vm.contextScale),height:asPx(hotspot.height*vm.contextScale)}})}function setLayoutStylesForScreenMode(){switch(vm.layoutStyles={renderMode:"screen",scroller:setLayoutStylesForScroller(vm.screen),composite:null,screen:null,hotspots:null},vm.layoutStyles.composite={width:asPx(vm.screen.width*vm.contextScale),height:asPx(vm.screen.height*vm.contextScale)},vm.layoutStyles.screen={width:asPx(vm.screen.width*vm.contextScale),height:asPx(vm.screen.height*vm.contextScale)},vm.screen.alignment){case"left":vm.layoutStyles.composite.margin="0 auto 0 0";break;case"right":vm.layoutStyles.composite.margin="0 0 0 auto";break;default:vm.layoutStyles.composite.margin="0 auto 0 auto"}vm.layoutStyles.hotspots=Object.create(null),vm.hotspots.forEach(function(hotspot){vm.layoutStyles.hotspots[hotspot.id]={left:asPx(hotspot.x*vm.contextScale),top:asPx(hotspot.y*vm.contextScale),width:asPx(hotspot.width*vm.contextScale),height:asPx(hotspot.height*vm.contextScale)}})}function setLayoutStylesForScroller(backgroundScreen){var styles={"background-color":"#"+backgroundScreen.backgroundColor},backgroundImage=db.backgroundsByID[backgroundScreen.backgroundImageID];if(backgroundImage&&backgroundImage.imageUrl)switch(styles["background-image"]="url( '"+backgroundImage.imageUrl+"' )",styles["background-attachment"]="local",backgroundScreen.backgroundImagePosition){case"center":case"50% 0 no-repeat":styles["background-position"]="center top",styles["background-repeat"]="no-repeat";break;case"tile":case"repeat":styles["background-position"]="left top",styles["background-repeat"]="repeat";break;case"tile-horizontally":case"0 0 repeat-x":styles["background-position"]="left top",styles["background-repeat"]="repeat-x";break;case"fixed":switch(styles["background-attachment"]="scroll",styles["background-position"]="center top",styles["background-repeat"]="no-repeat",backgroundScreen.alignment){case"left":styles["background-position"]="left top";break;case"right":styles["background-position"]="right top"}}return styles}function setPrevNext(){vm.prev=vm.prevNextIndex[vm.screen.id].prev,vm.next=vm.prevNextIndex[vm.screen.id].next}function setPrevNextIndex(){vm.prevNextIndex=Object.create(null),db.screens.forEach(function(screen,i){vm.prevNextIndex[screen.id]={prev:db.screens[i-1]||_.last(db.screens),next:db.screens[i+1]||_.first(db.screens)}})}function setScreenIndex(){vm.screenIndex=db.screensByID}function setWindowTitle(){windowTitle.set(vm.screen.name)}var vm=this,renderContext=requestContext.getRenderContext("screens.detail",["screenID"]),unlistenToKeyCommands=null,targetTypes=appConfig.hotspotSettings.targetTypes,eventTypes=appConfig.hotspotSettings.eventTypes,positionTypes=appConfig.hotspotSettings.overlayPositions,HOTSPOT_MODES={OFF:"off",FLASHING:"flashing",ON:"on"};vm.screenID=0,vm.contextScreenID=0,vm.contextHotspotID="",vm.screen=null,vm.contextScreen=null,vm.contextHotspot=null,vm.contextScale=1,vm.flashTimer=null,vm.layoutStyles=null,vm.hotspots=null,vm.hasAutoCloseHotspot=!1,vm.screenIndex=null,vm.prevNextIndex=null,vm.prev=null,vm.next=null,vm.hotspotModes=[HOTSPOT_MODES.OFF,HOTSPOT_MODES.FLASHING,HOTSPOT_MODES.ON],vm.hotspotMode=HOTSPOT_MODE||HOTSPOT_MODES.ON,vm.isShowingHotspots=vm.hotspotMode===HOTSPOT_MODES.ON,vm.isFlashingHotspots=!1,vm.isShowingAside=IS_SHOWING_ASIDE,vm.nextScrollOffset=null,vm.screenHistory=null,vm.spotlightTimer=null,vm.spotlightID=null,vm.$onDestroy=$onDestroy,vm.$onInit=$onInit,vm.applyHotspotBehavior=applyHotspotBehavior,vm.closeOverlay=closeOverlay,vm.cycleHotspotMode=cycleHotspotMode,vm.handleHotspotMiss=handleHotspotMiss,vm.hideAside=hideAside,vm.hideFlash=hideFlash,vm.hideSpotlight=hideSpotlight,vm.gotoNextScreen=gotoNextScreen,vm.gotoPrevScreen=gotoPrevScreen,vm.showAside=showAside,vm.showFlash=showFlash,vm.showSpotlight=showSpotlight}app.controller("invM7DetailView.ViewController",ViewController);var IS_SHOWING_ASIDE=!0,HOTSPOT_MODE=null}(angular,InVision);;
//!file:screens-view/detail-view/detail-view.directive.js
!function(ng,app){"use strict";function DetailViewDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-5f9026"),controller:"invM7DetailView.ViewController",controllerAs:"vm",restrict:"E",scope:!0,template:'\n<div class="main-panel" ng-switch="vm.layoutStyles.renderMode">\n\n	<!--\n		The rendering of the screen is very confusing. The stacking changes depending on\n		the use of overlays. And, the fact that an overlay can be either fixed or absolute\n		makes the stacking even more complicated. I\'m trying to simplify it as much as\n		possible through the use of render-mode switching; but, this is a lot of duct tape\n		and trial-and-error.\n	-->\n\n	<!-- Begin: Screen render mode. -->\n	<div ng-switch-when="screen" class="rendering">\n\n		<div class="rendering-scroller" ng-style="vm.layoutStyles.scroller">\n\n			<inv-m7-composite\n				ng-style="vm.layoutStyles.composite">\n			</inv-m7-composite>\n\n		</div>\n\n	</div>\n	<!-- End: Screen render mode. -->\n\n\n	<!-- Begin: Inline-overlay render mode. -->\n	<div ng-switch-when="inlineOverlay" class="rendering">\n\n		<div class="rendering-scroller" ng-style="vm.layoutStyles.scroller">\n			<div class="rendering-scroller-inner">\n\n				<img\n					class="context-screen"\n					ng-src="{{ vm.contextScreen.imageUrl }}"\n					ng-style="vm.layoutStyles.contextScreen"\n				/>\n\n				<button\n					ng-click="vm.closeOverlay()"\n					class="context-backdrop"\n					ng-style="vm.layoutStyles.contextBackdrop">\n				</button>\n\n				<div\n					class="screen-projector"\n					ng-style="vm.layoutStyles.screenProjector">\n\n					<inv-m7-composite\n						ng-style="vm.layoutStyles.composite">\n					</inv-m7-composite>\n				</div>\n\n			</div>\n		</div>\n\n	</div>\n	<!-- End: Inline-overlay render mode. -->\n\n\n	<!-- Begin: Fixed-overlay render mode. -->\n	<div ng-switch-when="fixedOverlay" class="rendering">\n\n		<div class="rendering-scroller" ng-style="vm.layoutStyles.scroller">\n			<div class="rendering-scroller-inner">\n\n				<img\n					class="context-screen"\n					ng-src="{{ vm.contextScreen.imageUrl }}"\n					ng-style="vm.layoutStyles.contextScreen"\n				/>\n\n				<button\n					ng-click="vm.closeOverlay()"\n					class="context-backdrop"\n					ng-style="vm.layoutStyles.contextBackdrop">\n				</button>\n\n			</div>\n		</div>\n\n		<div\n			class="screen-projector"\n			ng-style="vm.layoutStyles.screenProjector">\n\n			<inv-m7-composite\n				ng-style="vm.layoutStyles.composite">\n			</inv-m7-composite>\n		</div>\n\n	</div>\n	<!-- End: Fixed-overlay render mode. -->\n\n\n	<button\n		ng-if="( ! vm.isShowingAside )"\n		ng-click="vm.showAside()"\n		class="ids-primary-button ids-primary-button--dark show-aside">\n		Show Details\n	</button>\n\n</div>\n\n<inv-m11-aside-view\n	ng-if="vm.isShowingAside"\n	screen-history="vm.screenHistory"\n	on-hide="vm.hideAside()"\n	hotspot-modes="vm.hotspotModes"\n	hotspot-mode="vm.hotspotMode"\n	on-cycle-hotspot-mode="vm.cycleHotspotMode()"\n	on-goto-next-screen="vm.gotoNextScreen()"\n	on-goto-prev-screen="vm.gotoPrevScreen()"\n	on-hotspot-enter="vm.showSpotlight( hotspotID )"\n	on-hotspot-leave="vm.hideSpotlight()"\n	class="aside-panel">\n</inv-m11-aside-view>\n'}}app.directive("invM7DetailView",DetailViewDirective)}(angular,InVision);;
//!file:screens-view/detail-view/hotspot-href.directive.js
!function(ng,app){"use strict";function HotspotDirective($location,appConfig){function link(scope,element,attributes){var targetTypes=appConfig.hotspotSettings.targetTypes,hotspot=scope.$eval(attributes.invHotspotHref),href="",screenHistory=scope.$eval(attributes.screenHistory);switch(hotspot.targetTypeID){case targetTypes.positionOnScreen:href="#/screens/"+hotspot.targetScreenID+"?scrollTo="+hotspot.metadata.scrollOffset+"&smoothScroll="+hotspot.metadata.isSmoothScroll+"&screenHistory="+screenHistory;break;case targetTypes.externalUrl:href="#/redirect?externalUrl="+encodeURIComponent(hotspot.metadata.url)+"&sourceUrl="+encodeURIComponent($location.url());break;case targetTypes.screenOverlay:if($location.search().contextScreenID)var contextScreenID=$location.search().contextScreenID,replace=!0;else var contextScreenID=hotspot.screenID,replace=!1;href="#/screens/"+hotspot.targetScreenID+"?contextScreenID="+contextScreenID+"&contextHotspotID="+hotspot.id+"&replace="+replace+"&screenHistory="+screenHistory;break;case targetTypes.lastScreenVisited:href="#/screens/"+hotspot.targetScreenID+"?pop=true&screenHistory="+screenHistory;break;case targetTypes.screen:case targetTypes.previousScreenInSort:case targetTypes.nextScreenInSort:default:href="#/screens/"+hotspot.targetScreenID+"?screenHistory="+screenHistory}element.attr("href",href)}return{link:link,restrict:"A"}}app.directive("invHotspotHref",HotspotDirective)}(angular,InVision);;
//!file:screens-view/list-view/list-view.controller.js
!function(ng,app){"use strict";function ViewController($element,$location,$scope,_,appConfig,db,formatDate,formatNumber,requestContext,searchService,viewScroller,windowTitle){function $onDestroy(){}function $onInit(){$scope.$on("requestContextChanged",handleRequestContextChanged);var urlFilters=getFiltersFromUrlWithSaneDefaults();vm.filters.keywords=urlFilters.keywords,vm.filters.userID=urlFilters.userID,vm.filters.dividerID=urlFilters.dividerID,vm.filters.statusID=urlFilters.statusID,vm.filters.page=urlFilters.page,loadRemoteData(),viewScroller.scrollAll($element)}function applyForm(){$location.search("keywords",vm.form.keywords||null),$location.search("userID",vm.form.userOption.id||null),$location.search("dividerID",vm.form.dividerOption.id||null),$location.search("statusID",vm.form.statusOption.id||null),$location.search("page",null)}function applyPage(page){$location.search("page",page)}function clearForm(){$location.search("keywords",null),$location.search("userID",null),$location.search("dividerID",null),$location.search("statusID",null),$location.search("page",null)}function scrollToTop(){viewScroller.scrollAll($element)}function getFiltersFromUrlWithSaneDefaults(){var search=$location.search();return{keywords:search.keywords||"",userID:+search.userID||0,dividerID:+search.dividerID||0,statusID:+search.statusID||0,page:+search.page||1}}function handleRequestContextChanged(){if(renderContext.isChangeRelevant()||!requestContext.hasActionChanged()){var urlFilters=getFiltersFromUrlWithSaneDefaults();urlFilters.keywords!==vm.filters.keywords||urlFilters.userID!==vm.filters.userID||urlFilters.dividerID!==vm.filters.dividerID||urlFilters.statusID!==vm.filters.statusID?(vm.filters.keywords=urlFilters.keywords,vm.filters.userID=urlFilters.userID,vm.filters.dividerID=urlFilters.dividerID,vm.filters.statusID=urlFilters.statusID,vm.filters.page=urlFilters.page,setFormFiltered(),setResultsFiltered(),setPagination(),setWindowTitle()):urlFilters.page!==vm.filters.page&&(vm.filters.page=urlFilters.page,setFormFiltered(),setPagination(),setWindowTitle())}}function loadRemoteData(){vm.prototype=db.prototype,setIncludeGroups(),setForm(),setFormFiltered(),setResults(),setResultsFiltered(),setPagination(),setDateIndex(),setOverviewCount(),setStats(),setWindowTitle()}function setDateIndex(){vm.dateIndex=Object.create(null),vm.results.forEach(function(result){vm.dateIndex[result.screen.updatedAt]=formatDate(result.screen.updatedAt)})}function setForm(){vm.form.keywords="",vm.form.userOptions=[{id:0,value:" - All users - "}],vm.form.userOption=vm.form.userOptions[0],db.users.forEach(function(user){db.screensByUserID[user.id]&&vm.form.userOptions.push({id:user.id,value:user.name+" <"+user.email+">"})}),vm.form.dividerOptions=db.dividers.map(function(divider){return{id:divider.id,value:divider.name}}),vm.form.dividerOptions.unshift({id:0,value:"- All groups -"}),vm.form.dividerOption=vm.form.dividerOptions[0],vm.form.statusOptions=db.screenStatuses.map(function(status){return{id:status.id,value:status.name}}),vm.form.statusOptions.unshift({id:0,value:"- All statuses -"})}function setFormFiltered(){vm.form.keywords=vm.filters.keywords,vm.form.userOption=_.findWithProperty(vm.form.userOptions,"id",vm.filters.userID),vm.form.dividerOption=_.findWithProperty(vm.form.dividerOptions,"id",vm.filters.dividerID),vm.form.statusOption=_.findWithProperty(vm.form.statusOptions,"id",vm.filters.statusID),vm.form.page=vm.filters.page}function setIncludeGroups(){vm.includeGroups=vm.prototype.sortTypeID===sortTypes.manual}function setOverviewCount(){vm.overviewCount=1===vm.results.length?"was 1 screen":"were "+formatNumber(vm.results.length)+" screens"}function setPagination(){var pageSize=25,pageCount=Math.ceil(vm.filteredResults.length/pageSize),pageNumber=vm.filters.page=_.clamp(vm.filters.page,1,pageCount),pageLinks=[],startIndex=(pageNumber-1)*pageSize,endIndex=startIndex+pageSize,results=vm.filteredResults.slice(startIndex,endIndex);if(pageCount>1)for(var i=1;pageCount>=i;i++)pageLinks.push({pageNumber:i,label:i});var resultsByGroup=[],group={id:-1,name:"",results:[]};results.forEach(function(result){result.divider.id!==group.id&&(group={id:result.divider.id,name:result.divider.name,results:[]},resultsByGroup.push(group)),group.results.push(result)}),vm.pagination={pageSize:pageSize,pageCount:pageCount,pageNumber:pageNumber,pageLinks:pageLinks,results:results,resultsByGroup:resultsByGroup}}function setResults(){var noDivider={id:0,name:""},noStatus={id:0,name:"",color:""};vm.results=db.screens.map(function(screen){var user=db.usersByID[screen.userID],keywords=searchService.normalizeInputs([screen.name,screen.clientFilename]),divider=db.dividersByID[screen.screenGroupID]||noDivider,status=db.screenStatusesByID[screen.workflowStatusID]||noStatus;return{keywords:keywords,user:user,screen:screen,divider:divider,status:status}})}function setResultsFiltered(){if(!(vm.filters.keywords||vm.filters.userID||vm.filters.dividerID||vm.filters.statusID))return void(vm.filteredResults=vm.results);var normalizedKeywords=searchService.normalize(vm.filters.keywords);vm.filteredResults=vm.results.filter(function(result){return vm.filters.userID&&vm.filters.userID!==result.user.id?!1:vm.filters.dividerID&&vm.filters.dividerID!==result.divider.id?!1:vm.filters.statusID&&vm.filters.statusID!==result.status.id?!1:normalizedKeywords&&!_.includes(result.keywords,normalizedKeywords)?!1:!0})}function setStats(){vm.stats={hotspotCount:Object.create(null),commentCount:Object.create(null)},db.screens.forEach(function(screen){vm.stats.hotspotCount[screen.id]=db.hotspotsByScreenID[screen.id]?formatNumber(db.hotspotsByScreenID[screen.id].length):0,vm.stats.commentCount[screen.id]=db.conversationsByScreenID[screen.id]?formatNumber(db.conversationsByScreenID[screen.id].length):0})}function setWindowTitle(){vm.filters.page>1?windowTitle.set("Screens (page "+vm.filters.page+")"):windowTitle.set("Screens")}var vm=this,sortTypes=appConfig.prototypeSettings.sortTypes,renderContext=requestContext.getRenderContext("screens.list");vm.prototype=null,vm.results=null,vm.filteredResults=null,vm.overviewCount=null,vm.dateIndex=null,vm.stats=null,vm.pagination=null,vm.filters={keywords:"",userID:0,dividerID:0,statusID:0,page:1},vm.form={keywords:"",userOption:null,userOptions:[],dividerOption:null,dividerOptions:[],statusOptions:[],statusOption:null,page:1},vm.includeGroups=!1,vm.$onDestroy=$onDestroy,vm.$onInit=$onInit,vm.applyForm=applyForm,vm.applyPage=applyPage,vm.clearForm=clearForm,vm.scrollToTop=scrollToTop}app.controller("invM6ListView.ViewController",ViewController)}(angular,InVision);;
//!file:screens-view/list-view/list-view.directive.js
!function(ng,app){"use strict";function ListViewDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-9fbbcf"),controller:"invM6ListView.ViewController",controllerAs:"vm",restrict:"E",scope:!0,template:'\n<div class="ids-content-pane">\n\n	<h1 class="ids-h1">\n		Screens\n	</h1>\n\n	<p class="ids-text">\n		At the time of the export, there {{ :: vm.overviewCount }} in {{ :: vm.prototype.name }}.\n	</p>\n\n	<inv-m15-screen-pills active-pill="list"></inv-m15-screen-pills>\n\n	<form ng-submit="vm.applyForm()" class="ids-form-bar">\n		<div class="ids-form-bar__entry">\n			<label for="form--keywords-input" class="ids-form-bar__label">\n				Search:\n			</label>\n			<div class="ids-form-bar__body">\n				<input\n					id="form--keywords-input"\n					type="text"\n					ng-model="vm.form.keywords"\n					ng-model-options="{ debounce: 300 }"\n					ng-change="vm.applyForm()"\n					class="ids-input keywords-input"\n				/>\n			</div>\n		</div>\n		<div ng-if="vm.includeGroups" class="ids-form-bar__entry">\n			<label for="form--group" class="ids-form-bar__label">\n				Group:\n			</label>\n			<div class="ids-form-bar__body">\n				<ids-select\n					control-id="form--group"\n					ng-model="vm.form.dividerOption"\n					options="vm.form.dividerOptions"\n					option-label="value"\n					ng-change="vm.applyForm()"\n					class="group-input">\n				</ids-select>\n			</div>\n		</div>\n		<div class="ids-form-bar__entry">\n			<label for="form--status" class="ids-form-bar__label">\n				Workflow:\n			</label>\n			<div class="ids-form-bar__body">\n				<ids-select\n					control-id="form--status"\n					ng-model="vm.form.statusOption"\n					options="vm.form.statusOptions"\n					option-label="value"\n					ng-change="vm.applyForm()"\n					class="status-input">\n				</ids-select>\n			</div>\n		</div>\n		<div class="ids-form-bar__entry">\n			<label for="form--user" class="ids-form-bar__label">\n				User:\n			</label>\n			<div class="ids-form-bar__body">\n				<ids-select\n					control-id="form--user"\n					ng-model="vm.form.userOption"\n					options="vm.form.userOptions"\n					option-label="value"\n					ng-change="vm.applyForm()"\n					class="user-input">\n				</ids-select>\n			</div>\n		</div>\n		<div\n			ng-if="( vm.filters.keywords || vm.filters.userID || vm.filters.dividerID || vm.filters.statusID )"\n			class="ids-form-bar__buttons">\n			<button\n				type="button"\n				ng-click="vm.clearForm()"\n				class="ids-primary-button ids-primary-button--inline">\n				Clear\n			</button>\n		</div>\n	</form>\n\n	<table ng-if="vm.pagination.results.length" class="ids-table">\n	<thead>\n		<tr>\n			<th class="ids-table__th">\n				Name\n			</th>\n			<th class="ids-table__th" style="width: 1% ;">\n				Workflow\n			</th>\n			<th class="ids-table__th" style="width: 1% ;">\n				Version\n			</th>\n			<th class="ids-table__th" style="width: 1% ;">\n				Hotspots\n			</th>\n			<th class="ids-table__th" style="width: 1% ;">\n				Comments\n			</th>\n		</tr>\n	</thead>\n	<tbody ng-repeat="group in vm.pagination.resultsByGroup track by group.id">\n		<tr ng-if="( vm.includeGroups && group.id )">\n			<th colspan="5" class="ids-table__body-th">\n				{{ group.name }} ({{ group.results.length }})\n			</th>\n		</tr>\n		<tr ng-repeat="result in group.results track by result.screen.id">\n			<td class="ids-table__td ids-table__td--no-padding">\n				<a ng-href="#/screens/{{ :: result.screen.id }}" class="ids-table__block">\n					{{ :: result.screen.name }}\n				</a>\n			</td>\n			<td class="ids-table__td ids-table__td--nowrap">\n				{{ :: result.status.name }}\n			</td>\n			<td class="ids-table__td ids-table__td--center">\n				{{ :: result.screen.imageVersion }}\n			</td>\n			<td\n				class="ids-table__td ids-table__td--no-padding ids-table__td--center"\n				ng-switch=":: ( !! vm.stats.hotspotCount[ result.screen.id ] )">\n				<a\n					ng-switch-when="true"\n					ng-href="#/screens/{{ :: result.screen.id }}"\n					class="ids-table__block">\n					{{ :: vm.stats.hotspotCount[ result.screen.id ] }}\n				</a>\n				<span ng-switch-when="false" class="ids-table__block no-count">\n					&mdash;\n				</span>\n			</td>\n			<td\n				class="ids-table__td ids-table__td--no-padding ids-table__td--center"\n				ng-switch=":: ( !! vm.stats.commentCount[ result.screen.id ] )">\n				<a\n					ng-switch-when="true"\n					ng-href="#/comments/{{ :: result.screen.id }}"\n					class="ids-table__block">\n					{{ :: vm.stats.commentCount[ result.screen.id ] }}\n				</a>\n				<span ng-switch-when="false" class="ids-table__block no-count">\n					&mdash;\n				</span>\n			</td>\n		</tr>\n	</tbody>\n	</table>\n\n\n	<form ng-if="( vm.pagination.pageCount > 1 )" class="ids-form-bar">\n		<div class="ids-form-bar__entry">\n			<label for="form--page" class="ids-form-bar__label">\n				Page:\n			</label>\n			<div class="ids-form-bar__body">\n				<ids-select\n					control-id="form--page"\n					ng-model="vm.form.page"\n					options="vm.pagination.pageLinks"\n					option-key="pageNumber"\n					option-label="pageNumber"\n					ng-change="vm.applyPage( vm.form.page ); vm.scrollToTop()"\n					class="page-input">\n				</ids-select>\n			</div>\n		</div>\n		<div\n			class="ids-form-bar__buttons"\n			ng-switch="( vm.pagination.pageNumber < vm.pagination.pageCount )">\n			<button\n				ng-switch-when="true"\n				type="button"\n				ng-click="vm.applyPage( vm.pagination.pageNumber + 1 ); vm.scrollToTop()"\n				class="ids-primary-button ids-primary-button--inline">\n				Next &rarr;\n			</button>\n			<button\n				ng-switch-when="false"\n				type="button"\n				ng-click="vm.applyPage( 1 ); vm.scrollToTop()"\n				class="ids-primary-button ids-primary-button--inline">\n				Reset &circlearrowleft;\n			</button>\n		</div>\n	</form>\n\n\n	<ids-not-found ng-if="( ! vm.filteredResults.length )">\n		<h2 class="ids-h2">\n			No matches\n		</h2>\n		<p class="ids-p">\n			<a href="#/screens/list">Clear filters</a>.\n		</p>\n	</ids-not-found>\n\n</div>\n'}}app.directive("invM6ListView",ListViewDirective)}(angular,InVision);;
//!file:screens-view/screens-view.controller.js
!function(ng,app){"use strict";function ViewController($scope,requestContext){function $onDestroy(){}function $onInit(){$scope.$on("requestContextChanged",handleRequestContextChanged),vm.subview=renderContext.getNextSection()}function handleRequestContextChanged(){renderContext.isChangeRelevant()&&(vm.subview=renderContext.getNextSection())}var vm=this,renderContext=requestContext.getRenderContext("screens");vm.subview="",vm.$onDestroy=$onDestroy,vm.$onInit=$onInit}app.controller("invM4ScreensView.ViewController",ViewController)}(angular,InVision);;
//!file:screens-view/screens-view.directive.js
!function(ng,app){"use strict";function ScreensViewDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-67eb40"),controller:"invM4ScreensView.ViewController",controllerAs:"vm",restrict:"E",scope:!0,template:"\n<inv-m7-detail-view ng-if=\"( vm.subview === 'detail' )\"></inv-m7-detail-view>\n<inv-m6-list-view ng-if=\"( vm.subview === 'list' )\"></inv-m6-list-view>\n<inv-m14-browse-view ng-if=\"( vm.subview === 'browse' )\"></inv-m14-browse-view>\n"}}app.directive("invM4ScreensView",ScreensViewDirective)}(angular,InVision);;
//!file:screens-view/shared/screen-pills.directive.js
!function(ng,app){"use strict";function ScreenPillsDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-4f67f2"),restrict:"E",scope:{activePill:"@"},template:'\n<div class="pill-box">\n\n	<a\n		href="#/screens/list"\n		class="pill-box__pill pill"\n		ng-class="{\n			\'pill--active\': ( activePill === \'list\' )\n		}">\n		<svg aria-hidden="true" class="pill__icon">\n			<use xlink:href="#svg-sprite-list"></use>\n		</svg>\n		<span class="pill__label">\n			List\n		</span>\n	</a>\n\n	<a\n		href="#/screens/browse"\n		class="pill-box__pill pill"\n		ng-class="{\n			\'pill--active\': ( activePill === \'browse\' )\n		}">\n		<svg aria-hidden="true" class="pill__icon">\n			<use xlink:href="#svg-sprite-screens"></use>\n		</svg>\n		<span class="pill__label">\n			Browse\n		</span>\n	</a>\n\n</div>\n'}}app.directive("invM15ScreenPills",ScreenPillsDirective)}(angular,InVision);;
//!file:shared/ids/empty-state/not-found.directive.js
!function(ng,app){"use strict";function NotFoundDirective(appConfig,fakeCssModuleCompiler){function link(scope,element,attributes){scope.imgFolder=appConfig.publicDirectory+"/img"}return{compile:fakeCssModuleCompiler("c-11a9a0",link),restrict:"E",scope:!0,template:'\n<div class="left-panel">\n	<img\n		ng-src="{{ imgFolder }}/not-found.svg"\n		class="illustration"\n	/>\n</div>\n<div class="right-panel" ng-transclude>\n	<!-- Content projection. -->\n</div>\n',transclude:!0}}app.directive("idsNotFound",NotFoundDirective)}(angular,InVision);;
//!file:shared/ids/select/select.controller.js
!function(ng,app){"use strict";function SelectController($scope){function $onInit(){vm.controlID=props.controlId||"ids-select-"+ ++instanceCounter}function onChange(){vm.externalNgModelController&&vm.internalNgModel!==vm.externalNgModelController.$viewValue&&vm.externalNgModelController.$setViewValue(vm.internalNgModel)}function setNgModelController(externalNgModelController){vm.externalNgModelController=externalNgModelController,vm.externalNgModelController.$render=function(){vm.internalNgModel=vm.externalNgModelController.$viewValue}}var vm=this,props=$scope.props=$scope;vm.controlID=null,vm.externalNgModelController=null,vm.internalNgModel=!1,vm.$onInit=$onInit,vm.onChange=onChange,vm.setNgModelController=setNgModelController}app.controller("idsSelect.SelectController",SelectController);var instanceCounter=0}(angular,InVision);;
//!file:shared/ids/select/select.directive.js
!function(ng,app){"use strict";function SelectDirective(fakeCssModuleCompiler){function link(scope,element,attributes,controllers){controllers[0].setNgModelController(controllers[1])}return{compile:fakeCssModuleCompiler("c-942d38",link),controller:"idsSelect.SelectController",controllerAs:"vm",require:["idsSelect","ngModel"],restrict:"E",scope:{controlId:"@",name:"@",options:"=",optionKey:"@",optionLabel:"@",nullOption:"@"},template:'\n<!-- Using an option property ("key") as the ngModel value. -->\n<select\n	ng-if="props.optionKey"\n	id="{{ vm.controlID }}"\n	ng-model="vm.internalNgModel"\n	ng-options="option[ props.optionKey ] as option[ props.optionLabel ] for option in props.options"\n	ng-change="vm.onChange()"\n	class="input">\n	<option ng-if="props.nullOption" value="">{{ props.nullOption }}</option>\n</select>\n\n<!-- Using the option reference itself as the ngModel value. -->\n<select\n	ng-if="( ! props.optionKey )"\n	id="{{ vm.controlID }}"\n	ng-model="vm.internalNgModel"\n	ng-options="option[ props.optionLabel ] for option in props.options"\n	ng-change="vm.onChange()"\n	class="input">\n	<option ng-if="props.nullOption" value="">{{ props.nullOption }}</option>\n</select>\n\n<span class="carrot"></span>\n',transclude:!0}}app.directive("idsSelect",SelectDirective)}(angular,InVision);;
//!file:shared/ids/switch/switch.controller.js
!function(ng,app){"use strict";function SwitchController($scope){$scope.props=$scope}app.controller("idsSwitch.SwitchController",SwitchController)}(angular,InVision);;
//!file:shared/ids/switch/switch.directive.js
!function(ng,app){"use strict";function SwitchDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-7a4fc7"),controller:"idsSwitch.SwitchController",controllerAs:"vm",restrict:"E",scope:{isOn:"="},template:'\n<div class="track" ng-class="{ active: props.isOn }">\n	<span class="thumb"></span>\n</div>\n'}}app.directive("idsSwitch",SwitchDirective)}(angular,InVision);;
//!file:shared/ids/switch/tri-switch.controller.js
!function(ng,app){"use strict";function SwitchController($scope){function $onInit(){$scope.$watch("state",setPhase)}function setPhase(){var stateIndex=props.states.indexOf(props.state);vm.phase=vm.phases[stateIndex]||vm.phases[0]}var vm=this,props=$scope.props=$scope;vm.phases=["off","indeterminate","on"],vm.phase=vm.phases[0],vm.$onInit=$onInit}app.controller("idsTriSwitch.SwitchController",SwitchController)}(angular,InVision);;
//!file:shared/ids/switch/tri-switch.directive.js
!function(ng,app){"use strict";function TriSwitchDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-814d66"),controller:"idsTriSwitch.SwitchController",controllerAs:"vm",restrict:"E",scope:{states:"=",state:"="},template:'\n<div class="track {{ vm.phase }}">\n	<span class="thumb"></span>\n</div>\n'}}app.directive("idsTriSwitch",TriSwitchDirective)}(angular,InVision);;
//!file:sprite-sheet.directive.js
!function(ng,app){"use strict";function SpriteSheetDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-e7209a"),restrict:"E",scope:!0,template:'<svg>\n	<!--\n		Helio design system icons:\n		https://invisionapp.github.io/helios-design-system/?path=/story/foundations-icons--page\n	-->\n	<symbol id="svg-sprite-check" viewBox="0 0 24 24">\n		<polyline fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" points="6 13 10.1 17.3 18.6 7" />\n	</symbol>\n	<symbol id="svg-sprite-check-smaller" viewBox="0 0 24 24">\n		<polyline fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" points="8.3 12.6 10.9 15.2 16.3 9.2" />\n	</symbol>\n	<symbol id="svg-sprite-close" viewBox="0 0 24 24">\n		<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12,5 L12,19 M5,12 L19,12" transform="rotate(45 12 12)" />\n	</symbol>\n	<symbol id="svg-sprite-comment" viewBox="0 0 24 24">\n		<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5.08342857,16.0170495 C4.37714286,14.8083179 4,13.431802 4,11.999358 C4,7.58674561 7.58171429,4.00963048 12,4.00963048 C16.4182857,4.00963048 20,7.58674561 20,11.999358 C20,16.4119703 16.4182857,19.9890855 12,19.9890855 L7.93714286,19.9890855 L4,20.0096305 L5.08342857,16.0170495 Z" />\n	</symbol>\n	<symbol id="svg-sprite-heart" viewBox="0 0 24 24">\n		<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21,9.11370411 C21,6.24757057 18.6553371,4 15.7028575,4 C14.4081609,4 13.1186211,4.67591361 12,5.73518712 C10.881378,4.67591361 9.59184004,4 8.29714246,4 C5.34466389,4 3,6.24757057 3,9.11370411 C3,10.1428615 3.28502263,11.131036 3.84550144,12.1266122 C4.50949712,13.3060645 7.22621799,15.9305272 11.995664,20 C16.7772373,15.9244207 19.4991806,13.2958824 20.161494,12.1143851 C20.7173492,11.1227952 21,10.13854 21,9.11370411 Z"/>\n	</symbol>\n	<symbol id="svg-sprite-heart-filled" viewBox="0 0 24 24">\n		<path d="M21 9.114C21 6.248 18.655 4 15.703 4c-1.295 0-2.584.676-3.703 1.735C10.881 4.675 9.592 4 8.297 4 5.345 4 3 6.248 3 9.114c0 1.029.285 2.017.846 3.013.663 1.18 3.38 3.804 8.15 7.873 4.781-4.076 7.503-6.704 8.165-7.886.556-.991.839-1.975.839-3Z" stroke="currentColor" stroke-width="1.5" fill="currentColor" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"/>\n	</symbol>\n	<symbol id="svg-sprite-home" viewBox="0 0 24 24">\n		<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M14.5,19.5 L19.5,19.5 L19.5,9.71428571 L12,4.5 L4.5,9.5 L4.5,19.5 L9.5,19.5 M14.5,19.5 L14.5,15.5 C14.5,14.1728871 13.2633233,13.1428571 12,13.1428571 C10.7387718,13.1428571 9.5,14.1728871 9.5,15.5 L9.5,19.5" />\n	</symbol>\n	<symbol id="svg-sprite-list" viewBox="0 0 24 24">\n		<g fill="none" fill-rule="evenodd" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" transform="translate(4 8)">\n			<line x2="16" y1="7.5" y2="7.5"/>\n			<line x2="16" y1=".5" y2=".5"/>\n		</g>\n	</symbol>\n	<symbol id="svg-sprite-logo" viewBox="0 0 32 32">\n		<path fill="currentColor" fill-rule="evenodd" d="M32,0 L0,0 L0,32 L32,32 L32,0 Z M24.084,15.344 C24.084,13.225 22.773,12.12 21.184,12.12 C19.697,12.12 18.183,13.431 17.427,14.811 L17.982,12.334 L13.67,12.334 L13.065,14.516 L15.082,14.516 L13.84,19.375 C12.864,21.494 11.072,21.529 10.847,21.48 C10.478,21.398 10.242,21.261 10.242,20.792 C10.242,20.522 10.292,20.133 10.418,19.665 L12.31,12.334 L7.519,12.334 L6.914,14.516 L8.905,14.516 L7.619,19.649 C7.519,20.068 7.468,20.52 7.468,20.889 C7.468,22.343 8.275,23.309 9.99,23.309 C11.412,23.309 12.565,22.483 13.395,21.151 L12.888,23.139 L15.712,23.139 L17.326,16.813 C17.73,15.212 18.511,14.38 19.697,14.38 C20.63,14.38 21.21,14.947 21.21,15.883 C21.21,16.155 21.184,16.45 21.084,16.77 L20.251,19.678 C20.125,20.097 20.075,20.516 20.075,20.91 C20.075,22.29 20.907,23.3 22.647,23.3 C24.135,23.3 25.32,22.364 25.975,20.122 L24.866,19.703 C24.311,21.205 23.832,21.477 23.454,21.477 C23.076,21.477 22.874,21.231 22.874,20.738 C22.874,20.516 22.924,20.27 23,19.974 L23.807,17.141 C24.009,16.476 24.084,15.886 24.084,15.344 Z M12.89,9.157 C12.89,8.221 12.108,7.506 11.175,7.506 C10.242,7.506 9.46,8.221 9.46,9.157 C9.46,10.093 10.242,10.808 11.175,10.808 C12.108,10.808 12.89,10.093 12.89,9.157 Z" />\n	</symbol>\n	<symbol id="svg-sprite-navigate-left" viewBox="0 0 24 24">\n		<polyline fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" points="6 9 12 15 18 9" transform="rotate(90 12 12)" />\n	</symbol>\n	<symbol id="svg-sprite-navigate-right" viewBox="0 0 24 24">\n		<polyline fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" points="6 9 12 15 18 9" transform="rotate(-90 12 12)" />\n	</symbol>\n	<symbol id="svg-sprite-screens" viewBox="0 0 24 24">\n		<g fill="none" fill-rule="evenodd" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" transform="translate(5 5)">\n			<rect width="5" height="5" x=".5" y=".5" rx="1" />\n			<rect width="5" height="5" x=".5" y="8.5" rx="1" />\n			<rect width="5" height="5" x="8.5" y=".5" rx="1" />\n			<rect width="5" height="5" x="8.5" y="8.5" rx="1" />\n		</g>\n	</symbol>\n	<symbol id="svg-sprite-search" viewBox="0 0 24 24">\n		<g fill="none" fill-rule="evenodd" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" transform="translate(4 4)">\n			<circle cx="7" cy="7" r="7" />\n			<line x1="12" x2="16" y1="12" y2="16" />\n		</g>\n	</symbol>\n	<symbol id="svg-sprite-teams" viewBox="0 0 24 24">\n		<path fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round" stroke="currentColor" stroke-width="1.5" d="M16 11C17.9329966 11 19.5 9.43299662 19.5 7.5 19.5 5.56700338 17.9329966 4 16 4 14.0670034 4 12.5 5.56700338 12.5 7.5 12.5 9.43299662 14.0670034 11 16 11zM10.5810053 4.37659049C10.1061189 4.13573638 9.56891091 4 9 4 7.06700338 4 5.5 5.56700338 5.5 7.5 5.5 9.43299662 7.06700338 11 9 11 9.59402279 11 10.1534821 10.8520163 10.6435232 10.5909036M10 20.5C10 17.1862915 12.6862915 14.5 16 14.5 19.3137085 14.5 22 17.1862915 22 20.5M3 20.5C3 17.1862915 5.6862915 14.5 9 14.5" />\n	</symbol>\n</svg>\n'}}app.directive("invM0SpriteSheet",SpriteSheetDirective)}(angular,InVision);;
//!file:thank-you-view/thank-you-view.controller.js
!function(ng,app){"use strict";function ViewController($element,$scope,appConfig,viewScroller,windowTitle){function $onInit(){setWindowTitle(),viewScroller.scrollAll($element)}function updateButtonAction(){$element.find(".download__button").attr("download","prototype-"+appConfig.prototype.id+".json").attr("href","data:application/x-json;charset=utf-8,"+encodeURIComponent(JSON.stringify(appConfig)))}function setWindowTitle(){windowTitle.set("Thank You")}var vm=this;vm.$onInit=$onInit,vm.updateButtonAction=updateButtonAction}app.controller("invM13ThankYouView.ViewController",ViewController)}(angular,InVision);;
//!file:thank-you-view/thank-you-view.directive.js
!function(ng,app){"use strict";function ThankYouViewDirective(fakeCssModuleCompiler){return{compile:fakeCssModuleCompiler("c-cf6e70"),controller:"invM13ThankYouView.ViewController",controllerAs:"vm",restrict:"E",scope:!0,template:'\n<div class="ids-content-pane">\n\n	<h1 class="ids-h1">\n		Thank You For Everything\n	</h1>\n\n	<p class="ids-text">\n		In 2011, we founded InVision because we believed in a better, more holistic way of designing products.\n	</p>\n\n	<p class="ids-text">\n		We believed that collaboration, experimentation, and feedback loops were fundamentally important to the design process.\n	</p>\n\n	<p class="ids-text">\n		We used prototypes as a means to bring people and organizations together.\n	</p>\n\n	<p class="ids-text">\n		We loved taking this journey with you.\n	</p>\n\n	<p class="ids-text">\n		It\'s been a true honor.\n	</p>\n\n	<p class="ids-text">\n		&mdash; InVision Team\n	</p>\n\n	<div class="download">\n		<a\n			ng-click="vm.updateButtonAction()"\n			class="ids-primary-button ids-primary-button--dark download__button">\n			Export data as JSON file\n		</a>\n		<p class="ids-text download__note">\n			This may take a minute depending on your prototype size.\n		</p>\n	</div>\n\n	<p class="ids-text epilogue">\n		If you need help processing this data after InVision has closed, feel free to contact me at <a href="mailto:ben@bennadel.com">ben@bennadel.com</a>; or <a href="https://www.linkedin.com/in/bennadel/" target="_blank">connect with me</a> on LinkedIn.\n	</p>\n\n</div>\n'}}app.directive("invM13ThankYouView",ThankYouViewDirective)}(angular,InVision);;
//!file:autofocus.directive.js
!function(ng,app){"use strict";function Directive(){function link(scope,element,attributes){var attributeTruthy=attributes.invAutofocus.length?scope.$eval(attributes.invAutofocus):!0;if(attributeTruthy){var focusTimer=null;scope.$on("$destroy",function(){clearTimeout(focusTimer)}),focusTimer=setTimeout(function(){element.find("input,textarea,select,button").add(element).first().focus()},50)}}return{link:link,restrict:"A"}}app.directive("invAutofocus",Directive)}(angular,InVision);;
//!file:db.service.js
!function(ng,app){"use strict";function DBFactory(_,appConfig){function buildComments(){return _.flatten(_.pluck(appConfig.conversations,"comments"))}function buildRoles(){var allRoles=_.sortOnProperty(_.pluck(appConfig.memberships,"role"),"id");return _.uniq(allRoles,"id")}var comments=buildComments(),roles=buildRoles();return{prototype:appConfig.prototype,device:appConfig.device,company:appConfig.company,memberships:appConfig.memberships,screens:appConfig.screens,screensByID:_.indexBy(appConfig.screens,"id"),screensByUserID:_.groupBy(appConfig.screens,"userID"),screenStatuses:appConfig.screenStatuses,screenStatusesByID:_.indexBy(appConfig.screenStatuses,"id"),hotspots:appConfig.hotspots,hotspotsByID:_.indexBy(appConfig.hotspots,"id"),hotspotsByScreenID:_.groupBy(appConfig.hotspots,"screenID"),backgrounds:appConfig.backgrounds,backgroundsByID:_.indexBy(appConfig.backgrounds,"id"),dividers:appConfig.dividers,dividersByID:_.indexBy(appConfig.dividers,"id"),conversations:appConfig.conversations,conversationsByID:_.indexBy(appConfig.conversations,"id"),conversationsByScreenID:_.groupBy(appConfig.conversations,"screenID"),comments:comments,commentsByUserID:_.groupBy(comments,"userID"),users:appConfig.users,usersByID:_.indexBy(appConfig.users,"id"),roles:roles,rolesByID:_.indexBy(roles,"id")}}app.factory("db",DBFactory)}(angular,InVision);;
//!file:fake-css-compiler.service.js
!function(ng,app){"use strict";function fakeCssModuleCompiler(cssModuleName,link){function compileDirective(tElement,tAttributes){return tElement.addClass(cssModuleName).attr(cssModuleName,""),angular.forEach(tElement.find("*"),function(tChild){tChild.setAttribute(cssModuleName,"")}),link||void 0}return compileDirective}app.value("fakeCssModuleCompiler",fakeCssModuleCompiler)}(angular,InVision);;
//!file:format.service.js
!function(ng,app){"use strict";function FormatNumberFactory($filter){return $filter("number")}function FormatDateFactory(dateHelper){return function(value){return dateHelper.formatDate(value,"yyyy-mm-dd")}}app.factory("formatNumber",FormatNumberFactory),app.factory("formatDate",FormatDateFactory)}(angular,InVision);;
//!file:key-commands-priority.service.js
!function(ng,app){"use strict";app.value("keyCommandsPriority",{APP:-1,MAIN:100,MODAL_WRAPPER:200,MODAL:300})}(angular,InVision);;
//!file:search.service.js
!function(ng,app){"use strict";function SearchServiceFactory(){function normalize(input){return input.toLowerCase().replace(/[\s'".\-]+/g,"")}function normalizeInputs(inputs){return inputs.map(normalize).join("|")}return{normalize:normalize,normalizeInputs:normalizeInputs}}app.factory("searchService",SearchServiceFactory)}(angular,InVision);;
//!file:title.service.js
!function(ng,app){"use strict";function WindowTitleFactory(db){function set(title){document.title=title+" - "+db.prototype.name+" - InVision"}return{set:set}}app.factory("windowTitle",WindowTitleFactory)}(angular,InVision);;
//!file:view-scroller.service.js
!function(ng,app){"use strict";function ViewScrollerFactory(){function scroll(element){ng.element(element)[0].scrollTo(0,0)}function scrollAll(element){for(var node=ng.element(element)[0];node;){if(node.scrollTop&&node.scrollTo&&node.scrollTo(0,0),node===document.body)return;node=node.parentElement}}function scrollIntoView(element,behavior,block,inline){var node=ng.element(element)[0];node&&node.scrollIntoView({behavior:behavior||"smooth",block:block||"center",inline:inline||"center"})}return{scroll:scroll,scrollAll:scrollAll,scrollIntoView:scrollIntoView}}app.factory("viewScroller",ViewScrollerFactory)}(angular,InVision);